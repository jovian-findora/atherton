{
  "contractName": "AthertonStaking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_DAO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ATHER",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sATHER",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_epochLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_firstEpochNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_firstEpochBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ATHER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distribute",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "forfeitPenalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sATHER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "warmupContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "warmupInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gons",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "lock",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "warmupPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "forfeit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleDepositLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_trigger",
          "type": "bool"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "index",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "giveLockBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "returnLockBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AthertonStaking.CONTRACTS",
          "name": "_contract",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_warmupPeriod",
          "type": "uint256"
        }
      ],
      "name": "setWarmup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_penalty",
          "type": "uint256"
        }
      ],
      "name": "setForfeitPenalty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDao",
          "type": "address"
        }
      ],
      "name": "setDao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_DAO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ATHER\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sATHER\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_epochLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_firstEpochNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_firstEpochBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATHER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distribute\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forfeit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forfeitPenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"giveLockBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"returnLockBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sATHER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum AthertonStaking.CONTRACTS\",\"name\":\"_contract\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDao\",\"type\":\"address\"}],\"name\":\"setDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_penalty\",\"type\":\"uint256\"}],\"name\":\"setForfeitPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_warmupPeriod\",\"type\":\"uint256\"}],\"name\":\"setWarmup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleDepositLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_trigger\",\"type\":\"bool\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"warmupContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"warmupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"lock\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"warmupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address)\":{\"params\":{\"_recipient\":\"address\"}},\"contractBalance()\":{\"returns\":{\"_0\":\"uint\"}},\"giveLockBonus(uint256)\":{\"params\":{\"_amount\":\"uint\"}},\"index()\":{\"returns\":{\"_0\":\"uint\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"returnLockBonus(uint256)\":{\"params\":{\"_amount\":\"uint\"}},\"setContract(uint8,address)\":{\"params\":{\"_contract\":\"address\"}},\"setForfeitPenalty(uint256)\":{\"params\":{\"_penalty\":\"uint (10000 == 100%)\"}},\"setWarmup(uint256)\":{\"params\":{\"_warmupPeriod\":\"uint\"}},\"stake(uint256,address)\":{\"params\":{\"_amount\":\"uint\"},\"returns\":{\"_0\":\"bool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256,bool)\":{\"params\":{\"_amount\":\"uint\",\"_trigger\":\"bool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"retrieve sATHER from warmup\"},\"contractBalance()\":{\"notice\":\"returns contract ATHER holdings, including bonuses provided\"},\"forfeit()\":{\"notice\":\"forfeit sATHER in warmup and retrieve ATHER\"},\"giveLockBonus(uint256)\":{\"notice\":\"provide bonus to locked staking contract\"},\"index()\":{\"notice\":\"returns the sATHER index, which tracks rebase growth\"},\"rebase()\":{\"notice\":\"trigger rebase if epoch over\"},\"returnLockBonus(uint256)\":{\"notice\":\"reclaim bonus from locked staking contract\"},\"setContract(uint8,address)\":{\"notice\":\"sets the contract address for LP staking\"},\"setForfeitPenalty(uint256)\":{\"notice\":\"set warmup period for new stakers\"},\"setWarmup(uint256)\":{\"notice\":\"set warmup period for new stakers\"},\"stake(uint256,address)\":{\"notice\":\"stake ATHER to enter warmup\"},\"toggleDepositLock()\":{\"notice\":\"prevent new deposits to address (protection from malicious activity)\"},\"unstake(uint256,bool)\":{\"notice\":\"redeem sATHER for ATHER\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"AthertonStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x53a0bb51b8a505e04aaf065de27c0e31cadf38194f8a9a6ec92b7bcd3c5826e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d7019db0d8c1256995eb44b2aabf1189120c0bd01efa653e0eabdbc8cf4742\",\"dweb:/ipfs/QmZRiFEksts7Z2r1xnHb9Jqu4udHyTM6tQVTCyFosMXQAy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cc9f9a6d9c1e2ca9cd191840c0e6017d22bf99d88b368137e43c67f63d17d1c\",\"dweb:/ipfs/Qmd3vUSxY4fRi4AUFMkerjrMFEKRLGVJUGFmxazR1wnPXP\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4082ea29d4cab3998038c2c5e37ed990e009a6d8814bbe82931173db7b6e63d5\",\"dweb:/ipfs/QmaAwSn8ubftkwEYP3iU14f8VP7texzjWDXbopEEvm8LQF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x74f630d2664c1581a1cbd0730d4ba119b3a184ef90c65f3a934be4d16d0e58a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadad0b133129f946a53e0f61fa387803ccdc010d9c794da0738bb7fc5001b66\",\"dweb:/ipfs/QmQdTBpUT9WgDuCm7womDFiAnksepw6Fmi5Z5vv1H17Qr1\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/AthertonModels.sol\":{\"keccak256\":\"0x31d97c73fa438cceae4c7fd8365e5431d2a083198f4637fdf9196ee86b848944\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://40c3b1d644cf20451ea50d570133490ab4b06d457ea685dbbdca50c027bbf723\",\"dweb:/ipfs/QmVPnb3rukRdw7H9sSZczFVQtLxDDR5mtYvdnaEdNq9ezA\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x53f5453abb05e78ff4b6d6d033785eff1ba1a844e23e68e395af41d95618e1a7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5a9a67932d9e331e172157952565f22a1a50e9253b93c470db57930aa7b408c9\",\"dweb:/ipfs/QmSpCmoghBWGwDBunNsAKELe6aGsFK29LRYwm2Kn1VjTXY\"]},\"project:/contracts/util/ERC20Permit.sol\":{\"keccak256\":\"0xd84ec0451189b4328219ae8335b6b00ba9f4914b843fcaf06d13d0b8aa2ea0be\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://491aa7645845c399418b10b4f3f2f7570de8a63d3fcd518c7a0b19c147ca6d50\",\"dweb:/ipfs/QmPS7Q2frk7nN7YMUNSfXryhXz36q4a2D31Aum7ErW6XGZ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806398fabd3a116100f9578063c9f464ff11610097578063ed4acaa811610071578063ed4acaa814610479578063f2fde38b14610497578063f3d86e4a146104b3578063f62ae76a146104bd576101c4565b8063c9f464ff14610421578063d7b96d4e1461043d578063deac361a1461045b576101c4565b8063af14052c116100d3578063af14052c146103bf578063bfe10928146103c9578063c188a200146103e7578063c289b21614610405576101c4565b806398fabd3a146103675780639ebea88c14610385578063a8dd07dc146103a1576101c4565b80637acb7757116101665780638da5cb5b116101405780638da5cb5b146103005780638f077b831461031e578063900cf0cf146103285780639697f58a14610349576101c4565b80637acb775714610296578063865e6fd3146102c65780638b7afe2e146102e2576101c4565b80634e3d8853116101a25780634e3d88531461021f5780636637b8821461023d5780636746f4c214610259578063715018a61461028c576101c4565b806303c23670146101c95780631e83409a146101e55780632986c0e514610201575b600080fd5b6101e360048036038101906101de91906123ae565b6104d9565b005b6101ff60048036038101906101fa9190612320565b6105be565b005b610209610816565b604051610216919061299c565b60405180910390f35b6102276108bb565b60405161023491906127e4565b60405180910390f35b61025760048036038101906102529190612320565b6108df565b005b610273600480360381019061026e9190612320565b61099f565b60405161028394939291906129e0565b60405180910390f35b6102946109dc565b005b6102b060048036038101906102ab9190612400565b610a64565b6040516102bd919061285f565b60405180910390f35b6102e060048036038101906102db9190612372565b610d90565b005b6102ea61116c565b6040516102f7919061299c565b60405180910390f35b610308611230565b60405161031591906127e4565b60405180910390f35b610326611259565b005b610330611305565b6040516103409493929190612a25565b60405180910390f35b610351611323565b60405161035e919061299c565b60405180910390f35b61036f611329565b60405161037c91906127e4565b60405180910390f35b61039f600480360381019061039a919061243c565b61134f565b005b6103a96113fa565b6040516103b6919061299c565b60405180910390f35b6103c7611400565b005b6103d16116e3565b6040516103de91906127e4565b60405180910390f35b6103ef611709565b6040516103fc91906127e4565b60405180910390f35b61041f600480360381019061041a91906123ae565b61172d565b005b61043b600480360381019061043691906123ae565b6117b3565b005b610445611839565b60405161045291906127e4565b60405180910390f35b61046361185f565b604051610470919061299c565b60405180910390f35b610481611865565b60405161048e91906127e4565b60405180910390f35b6104b160048036038101906104ac9190612320565b61188b565b005b6104bb611983565b005b6104d760048036038101906104d291906123ae565b611d1b565b005b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053357600080fd5b61054881600854611e0290919063ffffffff16565b6008819055506105bb600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b50565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905080604001516002600101541015801561066357506000816040015114155b1561081257600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549060ff02191690555050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3a2a665837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637965d56d85602001516040518263ffffffff1660e01b8152600401610772919061299c565b60206040518083038186803b15801561078a57600080fd5b505afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c291906123d7565b6040518363ffffffff1660e01b81526004016107df929190612836565b600060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505050505b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b15801561087e57600080fd5b505afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b691906123d7565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108e7611e9e565b73ffffffffffffffffffffffffffffffffffffffff16610905611230565b73ffffffffffffffffffffffffffffffffffffffff161461095b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109529061293c565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b6109e4611e9e565b73ffffffffffffffffffffffffffffffffffffffff16610a02611230565b73ffffffffffffffffffffffffffffffffffffffff1614610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f9061293c565b60405180910390fd5b610a626000611ea6565b565b6000610a6e611400565b610abb3330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6a909392919063ffffffff16565b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050806060015115610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e9061289c565b60405180910390fd5b6040518060800160405280610ba9868460000151611e0290919063ffffffff16565b8152602001610c6d7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631bd39674886040518263ffffffff1660e01b8152600401610c0a919061299c565b60206040518083038186803b158015610c2257600080fd5b505afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a91906123d7565b8460200151611e0290919063ffffffff16565b8152602001610c8c600a54600260010154611e0290919063ffffffff16565b815260200160001515815250600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050610d85600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b600191505092915050565b610d98611e9e565b73ffffffffffffffffffffffffffffffffffffffff16610db6611230565b73ffffffffffffffffffffffffffffffffffffffff1614610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e039061293c565b60405180910390fd5b60006002811115610e46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610e7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610ecb5780600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611168565b60016002811115610f05577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826002811115610f3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561101b57600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc906128fc565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611167565b600280811115611054577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600281111561108d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561116657600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111b906128bc565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b5050565b600061122b6008547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111cd91906127e4565b60206040518083038186803b1580156111e557600080fd5b505afa1580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d91906123d7565b611e0290919063ffffffff16565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550565b60028060000154908060010154908060020154908060030154905084565b600b5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b801561135e5761135d611400565b5b6113ab3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6a909392919063ffffffff16565b6113f633837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b5050565b60085481565b436002800154116116e1577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663058ecdb46002600301546002600101546040518363ffffffff1660e01b81526004016114709291906129b7565b602060405180830381600087803b15801561148a57600080fd5b505af115801561149e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c291906123d7565b506114df6002600001546002800154611e0290919063ffffffff16565b6002800181905550600260010160008154809291906114fd90612c2c565b9190505550600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115fc57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4fc6b6d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156115c257600080fd5b505af11580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190612349565b505b600061160661116c565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639358928b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561167057600080fd5b505afa158015611684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a891906123d7565b90508082116116c15760006002600301819055506116de565b6116d48183611ff390919063ffffffff16565b6002600301819055505b50505b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b611735611e9e565b73ffffffffffffffffffffffffffffffffffffffff16611753611230565b73ffffffffffffffffffffffffffffffffffffffff16146117a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a09061293c565b60405180910390fd5b80600b8190555050565b6117bb611e9e565b73ffffffffffffffffffffffffffffffffffffffff166117d9611230565b73ffffffffffffffffffffffffffffffffffffffff161461182f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118269061293c565b60405180910390fd5b80600a8190555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611893611e9e565b73ffffffffffffffffffffffffffffffffffffffff166118b1611230565b73ffffffffffffffffffffffffffffffffffffffff1614611907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fe9061293c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196e906128dc565b60405180910390fd5b61198081611ea6565b50565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549060ff02191690555050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3a2a665307f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637965d56d85602001516040518263ffffffff1660e01b8152600401611b14919061299c565b60206040518083038186803b158015611b2c57600080fd5b505afa158015611b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6491906123d7565b6040518363ffffffff1660e01b8152600401611b81929190612836565b600060405180830381600087803b158015611b9b57600080fd5b505af1158015611baf573d6000803e3d6000fd5b505050506000600b5414611cc8576000611bec612710611bde600b54856000015161200990919063ffffffff16565b61201f90919063ffffffff16565b90506000611c07828460000151611ff390919063ffffffff16565b9050611c76600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b611cc133827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b5050611d18565b611d173382600001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e189092919063ffffffff16565b5b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d7557600080fd5b611d8a81600854611ff390919063ffffffff16565b600881905550611dff600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6a909392919063ffffffff16565b50565b60008183611e109190612a9c565b905092915050565b611e998363a9059cbb60e01b8484604051602401611e37929190612836565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612035565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fed846323b872dd60e01b858585604051602401611f8b939291906127ff565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612035565b50505050565b600081836120019190612b7d565b905092915050565b600081836120179190612b23565b905092915050565b6000818361202d9190612af2565b905092915050565b6000612097826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120fc9092919063ffffffff16565b90506000815111156120f757808060200190518101906120b79190612349565b6120f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ed9061297c565b60405180910390fd5b5b505050565b606061210b8484600085612114565b90509392505050565b606082471015612159576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121509061291c565b60405180910390fd5b61216285612228565b6121a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121989061295c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121ca91906127cd565b60006040518083038185875af1925050503d8060008114612207576040519150601f19603f3d011682016040523d82523d6000602084013e61220c565b606091505b509150915061221c82828661223b565b92505050949350505050565b600080823b905060008111915050919050565b6060831561224b5782905061229b565b60008351111561225e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612292919061287a565b60405180910390fd5b9392505050565b6000813590506122b181612ce4565b92915050565b6000813590506122c681612cfb565b92915050565b6000815190506122db81612cfb565b92915050565b6000813590506122f081612d12565b92915050565b60008135905061230581612d22565b92915050565b60008151905061231a81612d22565b92915050565b60006020828403121561233257600080fd5b6000612340848285016122a2565b91505092915050565b60006020828403121561235b57600080fd5b6000612369848285016122cc565b91505092915050565b6000806040838503121561238557600080fd5b6000612393858286016122e1565b92505060206123a4858286016122a2565b9150509250929050565b6000602082840312156123c057600080fd5b60006123ce848285016122f6565b91505092915050565b6000602082840312156123e957600080fd5b60006123f78482850161230b565b91505092915050565b6000806040838503121561241357600080fd5b6000612421858286016122f6565b9250506020612432858286016122a2565b9150509250929050565b6000806040838503121561244f57600080fd5b600061245d858286016122f6565b925050602061246e858286016122b7565b9150509250929050565b61248181612bb1565b82525050565b61249081612bc3565b82525050565b60006124a182612a6a565b6124ab8185612a80565b93506124bb818560208601612bf9565b80840191505092915050565b60006124d282612a75565b6124dc8185612a8b565b93506124ec818560208601612bf9565b6124f581612cd3565b840191505092915050565b600061250d601f83612a8b565b91507f4465706f7369747320666f72206163636f756e7420617265206c6f636b6564006000830152602082019050919050565b600061254d602383612a8b565b91507f4c6f636b65722063616e6e6f7420626520736574206d6f7265207468616e206f60008301527f6e636500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125b3602683612a8b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612619602383612a8b565b91507f5761726d75702063616e6e6f7420626520736574206d6f7265207468616e206f60008301527f6e636500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061267f602683612a8b565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126e5602083612a8b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612725601d83612a8b565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000612765602a83612a8b565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6127c781612bef565b82525050565b60006127d98284612496565b915081905092915050565b60006020820190506127f96000830184612478565b92915050565b60006060820190506128146000830186612478565b6128216020830185612478565b61282e60408301846127be565b949350505050565b600060408201905061284b6000830185612478565b61285860208301846127be565b9392505050565b60006020820190506128746000830184612487565b92915050565b6000602082019050818103600083015261289481846124c7565b905092915050565b600060208201905081810360008301526128b581612500565b9050919050565b600060208201905081810360008301526128d581612540565b9050919050565b600060208201905081810360008301526128f5816125a6565b9050919050565b600060208201905081810360008301526129158161260c565b9050919050565b6000602082019050818103600083015261293581612672565b9050919050565b60006020820190508181036000830152612955816126d8565b9050919050565b6000602082019050818103600083015261297581612718565b9050919050565b6000602082019050818103600083015261299581612758565b9050919050565b60006020820190506129b160008301846127be565b92915050565b60006040820190506129cc60008301856127be565b6129d960208301846127be565b9392505050565b60006080820190506129f560008301876127be565b612a0260208301866127be565b612a0f60408301856127be565b612a1c6060830184612487565b95945050505050565b6000608082019050612a3a60008301876127be565b612a4760208301866127be565b612a5460408301856127be565b612a6160608301846127be565b95945050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612aa782612bef565b9150612ab283612bef565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ae757612ae6612c75565b5b828201905092915050565b6000612afd82612bef565b9150612b0883612bef565b925082612b1857612b17612ca4565b5b828204905092915050565b6000612b2e82612bef565b9150612b3983612bef565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b7257612b71612c75565b5b828202905092915050565b6000612b8882612bef565b9150612b9383612bef565b925082821015612ba657612ba5612c75565b5b828203905092915050565b6000612bbc82612bcf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015612c17578082015181840152602081019050612bfc565b83811115612c26576000848401525b50505050565b6000612c3782612bef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c6a57612c69612c75565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b612ced81612bb1565b8114612cf857600080fd5b50565b612d0481612bc3565b8114612d0f57600080fd5b50565b60038110612d1f57600080fd5b50565b612d2b81612bef565b8114612d3657600080fd5b5056fea2646970667358221220f02639021b75093420840f2b0aeaf970353489e302b1c3a0bc6c398f0fc7d42164736f6c63430008000033",
  "immutableReferences": {
    "3658": [
      {
        "length": 32,
        "start": 2237
      },
      {
        "length": 32,
        "start": 2678
      },
      {
        "length": 32,
        "start": 4470
      },
      {
        "length": 32,
        "start": 5042
      },
      {
        "length": 32,
        "start": 7218
      },
      {
        "length": 32,
        "start": 7293
      },
      {
        "length": 32,
        "start": 7379
      }
    ],
    "3660": [
      {
        "length": 32,
        "start": 1399
      },
      {
        "length": 32,
        "start": 1815
      },
      {
        "length": 32,
        "start": 2074
      },
      {
        "length": 32,
        "start": 2995
      },
      {
        "length": 32,
        "start": 3393
      },
      {
        "length": 32,
        "start": 4966
      },
      {
        "length": 32,
        "start": 5133
      },
      {
        "length": 32,
        "start": 5644
      },
      {
        "length": 32,
        "start": 5899
      },
      {
        "length": 32,
        "start": 6841
      },
      {
        "length": 32,
        "start": 7610
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1948:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:27",
                "type": ""
              }
            ],
            "src": "7:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:27"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:27",
                "type": ""
              }
            ],
            "src": "156:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "467:905:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "514:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "523:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "516:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "516:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "488:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "497:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:3:27",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "480:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "480:33:27"
                  },
                  "nodeType": "YulIf",
                  "src": "477:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "540:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "555:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "569:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "559:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "584:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "630:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "641:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "626:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "626:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "650:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "594:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "594:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "584:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "678:129:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "693:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "697:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "723:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "769:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "780:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "765:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "765:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "789:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "733:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "723:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "817:129:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "832:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "846:2:27",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "836:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "862:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "908:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "919:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "904:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "904:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "872:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "862:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "956:129:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "971:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "985:2:27",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "975:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1001:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1047:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1058:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1043:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1043:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1067:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1011:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1011:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1001:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1095:130:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1110:17:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1124:3:27",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1114:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1141:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1187:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1198:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1183:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1183:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1207:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1151:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1141:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1235:130:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1250:17:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1264:3:27",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1254:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1281:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1327:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1338:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1323:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1323:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1347:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1291:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1291:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "1281:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "397:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "408:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "420:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "428:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "436:6:27",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "444:6:27",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "452:6:27",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "460:6:27",
                "type": ""
              }
            ],
            "src": "305:1067:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1423:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1462:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1444:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1433:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1405:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1415:7:27",
                "type": ""
              }
            ],
            "src": "1378:96:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1525:81:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1535:65:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1550:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1557:42:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1546:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1535:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1507:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1517:7:27",
                "type": ""
              }
            ],
            "src": "1480:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1657:32:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1667:16:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1678:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1667:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1639:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1649:7:27",
                "type": ""
              }
            ],
            "src": "1612:77:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1738:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1795:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1804:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1807:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1797:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1797:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1797:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1761:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1786:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1768:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1768:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1758:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1751:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1751:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1748:2:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1731:5:27",
                "type": ""
              }
            ],
            "src": "1695:122:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1866:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1923:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1925:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1925:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1889:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1914:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1896:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1896:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1886:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1879:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1876:2:27"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1859:5:27",
                "type": ""
              }
            ],
            "src": "1823:122:27"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17693:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:27",
                "type": ""
              }
            ],
            "src": "7:139:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:27"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:27",
                "type": ""
              }
            ],
            "src": "152:133:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "351:77:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "361:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "376:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "361:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "392:23:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "392:30:27"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "329:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "337:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "345:5:27",
                "type": ""
              }
            ],
            "src": "291:137:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:101:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "510:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "532:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "519:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "510:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "589:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_CONTRACTS_$4216",
                      "nodeType": "YulIdentifier",
                      "src": "548:40:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "548:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "548:47:27"
                }
              ]
            },
            "name": "abi_decode_t_enum$_CONTRACTS_$4216",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "478:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "486:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "494:5:27",
                "type": ""
              }
            ],
            "src": "434:167:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "659:87:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "669:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "691:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "678:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "669:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "734:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "707:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "707:33:27"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "637:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "645:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "653:5:27",
                "type": ""
              }
            ],
            "src": "607:139:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "815:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "825:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "840:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "834:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "834:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "825:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "883:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "856:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "856:33:27"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "793:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "801:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "809:5:27",
                "type": ""
              }
            ],
            "src": "752:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:196:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1013:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1022:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1025:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1015:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1015:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1015:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "988:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1009:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "977:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1083:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1118:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1129:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1114:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1114:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1138:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1093:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1083:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "937:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "948:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "960:6:27",
                "type": ""
              }
            ],
            "src": "901:262:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:204:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1298:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1301:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1291:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1291:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1264:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1260:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1285:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1315:125:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1330:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1344:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1334:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1359:71:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1402:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1413:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1398:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1398:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1422:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1369:28:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1369:61:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1359:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1213:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1224:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1236:6:27",
                "type": ""
              }
            ],
            "src": "1169:278:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:338:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1596:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1605:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1608:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1598:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1598:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1598:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1571:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1580:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1567:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1563:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1560:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1622:131:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1637:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1651:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1641:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1666:77:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1715:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1726:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1711:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1711:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1735:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_CONTRACTS_$4216",
                          "nodeType": "YulIdentifier",
                          "src": "1676:34:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1676:67:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1666:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1763:118:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1778:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1792:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1782:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1808:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1843:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1854:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1839:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1839:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1863:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1818:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1808:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_CONTRACTS_$4216t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1512:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1523:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1535:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1543:6:27",
                "type": ""
              }
            ],
            "src": "1453:435:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1960:196:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2006:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2015:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2018:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2008:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2008:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2008:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1981:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1990:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1973:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1970:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2032:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2047:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2051:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2076:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2111:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2122:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2107:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2107:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2131:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2086:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2076:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1930:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1941:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1953:6:27",
                "type": ""
              }
            ],
            "src": "1894:262:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2239:207:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2285:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2294:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2297:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2287:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2287:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2287:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2260:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2269:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2256:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2256:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2252:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2252:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2249:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2311:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2326:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2340:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2330:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2355:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2401:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2412:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2397:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2397:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2421:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2365:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2365:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2355:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2220:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2232:6:27",
                "type": ""
              }
            ],
            "src": "2162:284:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2535:324:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2581:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2590:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2593:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2583:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2583:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2583:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2556:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2565:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2552:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2577:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2548:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2548:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2545:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2607:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2622:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2636:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2626:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2651:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2686:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2697:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2682:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2682:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2706:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2661:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2661:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2651:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2734:118:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2749:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2763:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2753:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2779:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2814:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2825:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2810:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2810:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2834:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2789:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2789:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2779:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2497:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2508:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2520:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2528:6:27",
                "type": ""
              }
            ],
            "src": "2452:407:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2945:321:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2991:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3000:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3003:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2993:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2993:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2993:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2966:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2975:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2962:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2962:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2987:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2958:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2958:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2955:2:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3017:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3032:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3046:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3036:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3061:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3096:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3107:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3092:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3092:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3116:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3071:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3071:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3061:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3144:115:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3159:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3173:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3163:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3189:60:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3221:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3232:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3217:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3217:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3241:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3199:17:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3199:50:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3189:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2907:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2918:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2930:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2938:6:27",
                "type": ""
              }
            ],
            "src": "2865:401:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3337:53:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3354:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3377:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3359:17:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3359:24:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:37:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3347:37:27"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3325:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3332:3:27",
                "type": ""
              }
            ],
            "src": "3272:118:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3455:50:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3472:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3492:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3477:14:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3477:21:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3465:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3465:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3465:34:27"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3443:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3450:3:27",
                "type": ""
              }
            ],
            "src": "3396:109:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3619:265:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3629:52:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3675:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3643:31:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3643:38:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3633:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:95:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3773:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3778:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3697:75:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3697:88:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3690:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3820:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3827:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3816:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3816:16:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3834:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3839:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3794:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3794:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3794:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3855:23:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3866:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3871:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3862:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3855:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3600:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3607:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3615:3:27",
                "type": ""
              }
            ],
            "src": "3511:373:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3982:272:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3992:53:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4039:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4006:32:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:39:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3996:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4054:78:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4120:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4125:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4061:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:71:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4054:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4167:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4174:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4163:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:16:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4181:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4186:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4141:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4141:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4202:46:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4213:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4240:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4218:21:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4218:29:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4209:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4209:39:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4202:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3963:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3970:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3978:3:27",
                "type": ""
              }
            ],
            "src": "3890:364:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4406:183:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4416:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4482:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4487:2:27",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4423:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4423:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4416:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4511:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4516:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4507:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4507:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4520:33:27",
                        "type": "",
                        "value": "Deposits for account are locked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4500:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:54:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4500:54:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4564:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4575:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4580:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4571:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4571:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4564:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4394:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4402:3:27",
                "type": ""
              }
            ],
            "src": "4260:329:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4741:221:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4751:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4817:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4822:2:27",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4758:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4758:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4751:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4846:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4842:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4842:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4855:34:27",
                        "type": "",
                        "value": "Locker cannot be set more than o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4835:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4835:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4835:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4911:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4916:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4907:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4907:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4921:5:27",
                        "type": "",
                        "value": "nce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4900:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4900:27:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4900:27:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4937:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4948:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4953:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4944:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4944:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4937:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4729:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4737:3:27",
                "type": ""
              }
            ],
            "src": "4595:367:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5114:224:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5124:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5190:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5195:2:27",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5131:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5124:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5219:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5224:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5215:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5215:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5228:34:27",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5208:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5208:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5208:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5284:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5289:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5280:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5280:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5294:8:27",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5273:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5273:30:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5313:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5324:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5329:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5320:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5313:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5102:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5110:3:27",
                "type": ""
              }
            ],
            "src": "4968:370:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5490:221:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5500:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5566:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5571:2:27",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5507:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5500:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5595:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5600:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5591:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5591:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5604:34:27",
                        "type": "",
                        "value": "Warmup cannot be set more than o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5584:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5584:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5584:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5660:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5665:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5656:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5656:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5670:5:27",
                        "type": "",
                        "value": "nce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5649:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5649:27:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:27:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5686:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5697:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5702:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5693:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5693:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5686:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5478:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5486:3:27",
                "type": ""
              }
            ],
            "src": "5344:367:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:224:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5873:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5939:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5944:2:27",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5880:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5880:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5873:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5968:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5973:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5964:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5977:34:27",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5957:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5957:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5957:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6033:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6038:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6043:8:27",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6022:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6022:30:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6062:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6073:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6069:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6062:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5851:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5859:3:27",
                "type": ""
              }
            ],
            "src": "5717:370:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6239:184:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6249:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6315:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6320:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6256:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6256:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6249:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6344:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6349:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6340:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6340:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6353:34:27",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6333:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6333:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6333:55:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6398:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6409:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6414:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6405:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6405:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6398:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6227:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6235:3:27",
                "type": ""
              }
            ],
            "src": "6093:330:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6575:181:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6585:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6651:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6656:2:27",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6592:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6585:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6680:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6685:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6676:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6676:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6689:31:27",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6669:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6669:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6669:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6731:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6742:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6747:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6738:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6731:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6563:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6571:3:27",
                "type": ""
              }
            ],
            "src": "6429:327:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6908:228:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6918:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6984:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:2:27",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6925:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6918:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7013:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7018:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7009:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7009:11:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7022:34:27",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7002:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:55:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:55:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7078:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7083:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7074:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7074:12:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7088:12:27",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7067:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7067:34:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7111:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7122:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7127:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7118:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7111:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6896:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6904:3:27",
                "type": ""
              }
            ],
            "src": "6762:374:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7207:53:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7224:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7247:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7229:17:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7229:24:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7217:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7217:37:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7217:37:27"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7195:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7202:3:27",
                "type": ""
              }
            ],
            "src": "7142:118:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7400:137:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7411:100:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7498:6:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7507:3:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7418:79:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7418:93:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7411:3:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7521:10:27",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7528:3:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7521:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7379:3:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7385:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7396:3:27",
                "type": ""
              }
            ],
            "src": "7266:271:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7641:124:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7651:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7663:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7674:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7659:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7659:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7651:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7731:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7744:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7755:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7740:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7740:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7687:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7687:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7687:71:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7613:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7625:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7636:4:27",
                "type": ""
              }
            ],
            "src": "7543:222:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7925:288:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7935:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7947:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7958:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7943:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7943:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7935:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8015:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8028:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8039:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8024:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8024:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7971:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7971:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7971:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8096:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8109:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8120:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8105:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8105:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8052:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8052:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8052:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8178:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8191:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8202:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8187:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8187:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8134:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8134:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8134:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7881:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7893:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7901:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7909:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7920:4:27",
                "type": ""
              }
            ],
            "src": "7771:442:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8345:206:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8355:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8367:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8378:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8363:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8363:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8355:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8435:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8448:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8459:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8444:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8444:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8391:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8391:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8391:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8516:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8529:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8540:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8525:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8525:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8472:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8472:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8309:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8321:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8329:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8340:4:27",
                "type": ""
              }
            ],
            "src": "8219:332:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8649:118:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8659:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8671:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8682:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8667:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8667:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8659:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8733:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8746:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8757:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8742:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8742:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8695:37:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8695:65:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8695:65:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8621:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8633:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8644:4:27",
                "type": ""
              }
            ],
            "src": "8557:210:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8891:195:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8901:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8913:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8924:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8909:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8909:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8901:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8948:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8959:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8944:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8944:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8967:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8973:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8963:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8963:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8937:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8937:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8937:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8993:86:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9065:6:27"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9074:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9001:63:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9001:78:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8993:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8863:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8875:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8886:4:27",
                "type": ""
              }
            ],
            "src": "8773:313:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9263:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9273:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9285:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9296:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9281:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9281:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9273:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9320:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9331:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9316:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9316:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9339:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9345:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9335:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9335:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9309:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9309:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9309:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9365:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9499:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9373:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9373:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9365:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9243:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9258:4:27",
                "type": ""
              }
            ],
            "src": "9092:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9688:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9698:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9710:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9721:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9706:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9706:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9698:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9745:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9756:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9741:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9741:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9764:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9770:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9760:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9760:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9734:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9734:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9734:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9790:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9924:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9798:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9798:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9790:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9668:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9683:4:27",
                "type": ""
              }
            ],
            "src": "9517:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10113:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10123:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10135:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10146:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10131:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10131:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10123:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10170:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10181:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10166:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10166:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10189:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10195:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10185:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10185:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10159:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10159:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10159:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10215:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10349:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10223:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10223:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10215:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10093:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10108:4:27",
                "type": ""
              }
            ],
            "src": "9942:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10538:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10548:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10560:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10571:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10556:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10556:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10548:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10595:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10606:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10591:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10591:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10614:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10620:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10610:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10610:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10584:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10584:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10584:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10640:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10774:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10648:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10648:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10640:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10518:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10533:4:27",
                "type": ""
              }
            ],
            "src": "10367:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10963:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10973:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10985:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10996:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10981:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10981:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10973:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11020:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11031:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11016:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11016:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11039:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11045:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11035:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11035:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11009:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11009:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11009:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11065:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11199:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11073:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11073:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11065:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10943:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10958:4:27",
                "type": ""
              }
            ],
            "src": "10792:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11388:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11398:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11410:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11421:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11406:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11406:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11398:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11445:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11456:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11441:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11441:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11464:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11470:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11460:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11460:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11434:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11434:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11434:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11490:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11624:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11498:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11498:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11490:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11368:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11383:4:27",
                "type": ""
              }
            ],
            "src": "11217:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11813:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11823:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11835:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11846:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11831:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11831:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11823:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11870:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11881:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11866:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11866:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11889:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11895:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11885:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11885:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11859:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11859:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11859:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11915:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12049:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11923:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11923:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11915:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11793:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11808:4:27",
                "type": ""
              }
            ],
            "src": "11642:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12238:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12248:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12260:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12271:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12256:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12256:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12248:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12295:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12306:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12291:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12291:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12314:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12320:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12310:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12310:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12284:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12284:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12284:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12340:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12474:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12348:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12348:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12340:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12218:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12233:4:27",
                "type": ""
              }
            ],
            "src": "12067:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12590:124:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12600:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12612:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12623:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12608:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12608:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12600:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12680:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12693:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12704:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12689:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12689:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12636:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12636:71:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12562:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12574:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12585:4:27",
                "type": ""
              }
            ],
            "src": "12492:222:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12846:206:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12856:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12868:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12879:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12864:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12864:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12856:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12936:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12949:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12960:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12945:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12945:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12892:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12892:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12892:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13017:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13030:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13041:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13026:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13026:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12973:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12973:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12973:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12810:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12822:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12830:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12841:4:27",
                "type": ""
              }
            ],
            "src": "12720:332:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13234:365:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13244:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13256:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13267:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13252:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13252:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13244:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13325:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13338:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13349:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13334:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13334:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13281:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13281:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13281:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13406:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13419:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13430:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13415:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13415:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13362:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13362:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13362:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13488:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13501:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13512:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13497:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13497:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13444:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13444:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13444:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "13564:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13577:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13588:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13573:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13573:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13526:37:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13526:66:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13526:66:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13182:9:27",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13194:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13202:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13210:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13218:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13229:4:27",
                "type": ""
              }
            ],
            "src": "13058:541:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13787:371:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13797:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13809:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13820:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13805:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13805:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13797:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13878:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13891:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13902:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13887:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13887:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13834:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13834:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13834:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13959:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13972:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13983:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13968:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13968:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13915:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13915:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13915:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14041:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14054:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14065:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14050:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14050:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13997:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13997:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13997:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "14123:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14136:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14147:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14132:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14132:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14079:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14079:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14079:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13735:9:27",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13747:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13755:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13763:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13771:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13782:4:27",
                "type": ""
              }
            ],
            "src": "13605:553:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14222:40:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14233:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14249:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14243:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14243:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14233:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14205:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14215:6:27",
                "type": ""
              }
            ],
            "src": "14164:98:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14327:40:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14338:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14354:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14348:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14348:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14338:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14310:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14320:6:27",
                "type": ""
              }
            ],
            "src": "14268:99:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14486:34:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14496:18:27",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "14511:3:27"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "14496:11:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14458:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14463:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "14474:11:27",
                "type": ""
              }
            ],
            "src": "14373:147:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14622:73:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14639:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14644:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14632:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14632:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14632:19:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14660:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14679:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14684:4:27",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14675:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14675:14:27"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "14660:11:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14594:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14599:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "14610:11:27",
                "type": ""
              }
            ],
            "src": "14526:169:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14745:261:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14755:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14778:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14760:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14760:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14755:1:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14789:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14812:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14794:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14794:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14789:1:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14952:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14954:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14954:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14954:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14873:1:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14880:66:27",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14948:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14876:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14876:74:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14870:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14870:81:27"
                  },
                  "nodeType": "YulIf",
                  "src": "14867:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14984:16:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14995:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14998:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14991:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14991:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14984:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14732:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14735:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14741:3:27",
                "type": ""
              }
            ],
            "src": "14701:305:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15054:143:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15064:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15087:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15069:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15069:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15064:1:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15098:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15121:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15103:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15103:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15098:1:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15145:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "15147:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15147:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15147:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15142:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15135:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15135:9:27"
                  },
                  "nodeType": "YulIf",
                  "src": "15132:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15177:14:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15186:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15189:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15182:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15182:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15177:1:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15043:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15046:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15052:1:27",
                "type": ""
              }
            ],
            "src": "15012:185:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15251:300:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15261:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15284:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15266:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15266:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15261:1:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15295:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15318:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15300:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15300:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15295:1:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15493:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15495:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15495:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15495:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15405:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15398:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15398:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15391:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15391:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15413:1:27"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15420:66:27",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15488:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "15416:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15416:74:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15410:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15410:81:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15387:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15387:105:27"
                  },
                  "nodeType": "YulIf",
                  "src": "15384:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15525:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15540:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15543:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "15536:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15536:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "15525:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15234:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15237:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "15243:7:27",
                "type": ""
              }
            ],
            "src": "15203:348:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15602:146:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15612:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15635:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15617:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15617:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15612:1:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15646:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15669:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15651:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15651:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15646:1:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15693:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15695:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15695:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15695:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15687:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15690:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15684:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15684:8:27"
                  },
                  "nodeType": "YulIf",
                  "src": "15681:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15725:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15737:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15740:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15733:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15733:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "15725:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15588:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15591:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "15597:4:27",
                "type": ""
              }
            ],
            "src": "15557:191:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15799:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15809:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15838:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15820:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15820:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15809:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15781:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15791:7:27",
                "type": ""
              }
            ],
            "src": "15754:96:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15898:48:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15908:32:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15933:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15926:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15926:13:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15919:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15919:21:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15908:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15880:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15890:7:27",
                "type": ""
              }
            ],
            "src": "15856:90:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15997:81:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16007:65:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16022:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16029:42:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16018:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16018:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16007:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15979:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15989:7:27",
                "type": ""
              }
            ],
            "src": "15952:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16129:32:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16139:16:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16150:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16139:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16111:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16121:7:27",
                "type": ""
              }
            ],
            "src": "16084:77:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16216:258:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16226:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16235:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16230:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16295:63:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16320:3:27"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "16325:1:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16316:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16316:11:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "16339:3:27"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "16344:1:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16335:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16335:11:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "16329:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16329:18:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16309:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16309:39:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16309:39:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16256:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16259:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16253:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16253:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "16267:19:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16269:15:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "16278:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16281:2:27",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16274:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16274:10:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "16269:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "16249:3:27",
                    "statements": []
                  },
                  "src": "16245:113:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16392:76:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16442:3:27"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16447:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16438:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16438:16:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16456:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16431:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16431:27:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16431:27:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16373:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16376:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16370:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16370:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "16367:2:27"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16198:3:27",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16203:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16208:6:27",
                "type": ""
              }
            ],
            "src": "16167:307:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16523:190:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16533:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16560:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16542:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16542:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16533:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16656:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16658:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16658:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16658:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16581:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16588:66:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "16578:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16578:77:27"
                  },
                  "nodeType": "YulIf",
                  "src": "16575:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16687:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16698:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16705:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16694:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16694:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "16687:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16509:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "16519:3:27",
                "type": ""
              }
            ],
            "src": "16480:233:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16747:152:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16764:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16767:77:27",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16757:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16757:88:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16757:88:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16861:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16864:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16854:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16854:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16854:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16885:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16888:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16878:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16878:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16878:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "16719:180:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16933:152:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16950:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16953:77:27",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16943:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16943:88:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16943:88:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17047:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17050:4:27",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17040:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17040:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17040:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17071:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17074:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17064:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17064:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17064:15:27"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "16905:180:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17139:54:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17149:38:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17167:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17174:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17163:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17163:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17183:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "17179:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17179:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17159:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17159:28:27"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "17149:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17122:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "17132:6:27",
                "type": ""
              }
            ],
            "src": "17091:102:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17242:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17299:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17308:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17311:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17301:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17301:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17301:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17265:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17290:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "17272:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17272:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17262:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17262:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17255:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17255:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "17252:2:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17235:5:27",
                "type": ""
              }
            ],
            "src": "17199:122:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17367:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17421:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17430:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17433:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17423:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17423:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17423:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17390:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17412:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "17397:14:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17397:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17387:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17387:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17380:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17380:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "17377:2:27"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17360:5:27",
                "type": ""
              }
            ],
            "src": "17327:116:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17506:56:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17540:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17549:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17552:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17542:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17542:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17542:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17529:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17536:1:27",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "17526:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17526:12:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17519:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17519:20:27"
                  },
                  "nodeType": "YulIf",
                  "src": "17516:2:27"
                }
              ]
            },
            "name": "validator_revert_t_enum$_CONTRACTS_$4216",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17499:5:27",
                "type": ""
              }
            ],
            "src": "17449:113:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17611:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17668:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17677:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17680:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17670:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17670:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17670:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17634:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17659:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "17641:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17641:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17631:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17631:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17624:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17624:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "17621:2:27"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17604:5:27",
                "type": ""
              }
            ],
            "src": "17568:122:27"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_CONTRACTS_$4216(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_CONTRACTS_$4216(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_CONTRACTS_$4216t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CONTRACTS_$4216(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"Deposits for account are locked\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"Locker cannot be set more than o\")\n\n        mstore(add(pos, 32), \"nce\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"Warmup cannot be set more than o\")\n\n        mstore(add(pos, 32), \"nce\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(pos, 32), \"r call\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Address: call to non-contract\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n\n        mstore(add(pos, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(pos, 32), \"ot succeed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_CONTRACTS_$4216(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "346:7022:14:-:0;;;892:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1110:1:14;1094:18;;:4;:18;;;;1085:29;;;;;;1130:4;1124:3;;:10;;;;;;;;;;;;;;;;;;1171:1;1153:20;;:6;:20;;;;1144:31;;;;;;1193:6;1185:14;;;;;;;;;;;;1237:1;1218:21;;:7;:21;;;;1209:32;;;;;;1260:7;1251:16;;;;;;;;;;;;1294:157;;;;;;;;1322:12;1294:157;;;;1356:17;1294:157;;;;1397:16;1294:157;;;;1439:1;1294:157;;;1286:5;:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:566;;;;;;346:7022;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:143:27:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:1067::-;;;;;;;509:3;497:9;488:7;484:23;480:33;477:2;;;526:1;523;516:12;477:2;569:1;594:64;650:7;641:6;630:9;626:22;594:64;:::i;:::-;584:74;;540:128;707:2;733:64;789:7;780:6;769:9;765:22;733:64;:::i;:::-;723:74;;678:129;846:2;872:64;928:7;919:6;908:9;904:22;872:64;:::i;:::-;862:74;;817:129;985:2;1011:64;1067:7;1058:6;1047:9;1043:22;1011:64;:::i;:::-;1001:74;;956:129;1124:3;1151:64;1207:7;1198:6;1187:9;1183:22;1151:64;:::i;:::-;1141:74;;1095:130;1264:3;1291:64;1347:7;1338:6;1327:9;1323:22;1291:64;:::i;:::-;1281:74;;1235:130;467:905;;;;;;;;:::o;1378:96::-;;1444:24;1462:5;1444:24;:::i;:::-;1433:35;;1423:51;;;:::o;1480:126::-;;1557:42;1550:5;1546:54;1535:65;;1525:81;;;:::o;1612:77::-;;1678:5;1667:16;;1657:32;;;:::o;1695:122::-;1768:24;1786:5;1768:24;:::i;:::-;1761:5;1758:35;1748:2;;1807:1;1804;1797:12;1748:2;1738:79;:::o;1823:122::-;1896:24;1914:5;1896:24;:::i;:::-;1889:5;1886:35;1876:2;;1935:1;1932;1925:12;1876:2;1866:79;:::o;346:7022:14:-;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "346:7022:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5536:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2533:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4338:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7284:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1599:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;1760:673:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6234:558;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5289:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3726:117:14;;;:::i;:::-;;667:18;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;855:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;527:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3962:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;756:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4500:670;;;:::i;:::-;;692:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7122:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6900;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;729:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2950:669:14;;;:::i;:::-;;5847:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5536:202;5617:6;;;;;;;;;;;5603:20;;:10;:20;;;5594:31;;;;;;5648:25;5664:7;5648:10;;:14;;:25;;;;:::i;:::-;5635:10;:38;;;;5683:48;5714:6;;;;;;;;;;;5722:7;5691:6;5683:29;;;;:48;;;;;:::i;:::-;5536:202;:::o;2533:335::-;2588:17;2608:10;:24;2620:10;2608:24;;;;;;;;;;;;;;;2588:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:4;:11;;;2647:5;:12;;;:27;;:47;;;;;2693:1;2678:4;:11;;;:16;;2647:47;2642:220;;;2718:10;:24;2730:10;2718:24;;;;;;;;;;;;;;;;2711:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:14;;;;;;;;;;;2756:34;;;2792:10;2813:6;2804:32;;;2838:4;:9;;;2804:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2756:95;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2642:220;2533:335;;:::o;4338:95::-;4377:4;4410:6;4401:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4394:32;;4338:95;:::o;454:30::-;;;:::o;7284:82::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7353:6:14::1;7347:3;;:12;;;;;;;;;;;;;;;;;;7284:82:::0;:::o;1599:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1760:673:14:-;1830:4;1847:8;:6;:8::i;:::-;1874:70;1908:10;1928:4;1935:7;1882:5;1874:32;;;;:70;;;;;;:::i;:::-;1955:17;1975:10;:24;1987:10;1975:24;;;;;;;;;;;;;;;1955:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:4;:9;;;2018:10;2009:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2103:227;;;;;;;;2133:27;2151:7;2133:4;:12;;;:16;;:27;;;;:::i;:::-;2103:227;;;;2180:60;2204:6;2195:32;;;2229:7;2195:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2180:4;:9;;;:13;;:60;;;;:::i;:::-;2103:227;;;;2262:32;2280:12;;2262:5;:12;;;:16;;:32;;;;:::i;:::-;2103:227;;;;2314:5;2103:227;;;;;2076:10;:24;2088:10;2076:24;;;;;;;;;;;;;;;:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:56;2380:14;;;;;;;;;;;2396:7;2357:6;2349:29;;;;:56;;;;;:::i;:::-;2422:4;2415:11;;;1760:673;;;;:::o;6234:558::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6344:21:14::1;6331:34;;;;;;;;;;;;;;;;:9;:34;;;;;;;;;;;;;;;;;6327:459;;;6401:8;6387:11;;:22;;;;;;;;;;;;;;;;;;6327:459;;;6444:16;6431:29;;;;;;;;;;;;;;;;:9;:29;;;;;;;;;;;;;;;;;6426:360;;;6518:1;6491:30;;:14;;;;;;;;;;;:30;;;6482:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;6593:8;6576:14;;:25;;;;;;;;;;;;;;;;;;6426:360;;;6636:16;6623:29:::0;::::1;;;;;;;;;;;;;;;:9;:29;;;;;;;;;;;;;;;;;6618:168;;;6701:1;6683:20;;:6;;;;;;;;;;;:20;;;6674:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6767:8;6758:6;;:17;;;;;;;;;;;;;;;;;;6618:168;6426:360;6327:459;6234:558:::0;;:::o;5289:140::-;5338:4;5362:60;5410:10;;5370:5;5362:25;;;5397:4;5362:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;:60;;;;:::i;:::-;5355:67;;5289:140;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;3726:117:14:-;3807:10;:24;3819:10;3807:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3806:30;3774:10;:24;3786:10;3774:24;;;;;;;;;;;;;;;:29;;;:62;;;;;;;;;;;;;;;;;;3726:117::o;667:18::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;855:26::-;;;;:::o;527:18::-;;;;;;;;;;;;;:::o;3962:264::-;4034:8;4029:49;;;4059:8;:6;:8::i;:::-;4029:49;4087:71;4122:10;4142:4;4149:7;4095:6;4087:33;;;;:71;;;;;;:::i;:::-;4168:51;4198:10;4210:7;4176:5;4168:28;;;;:51;;;;;:::i;:::-;3962:264;;:::o;756:22::-;;;;:::o;4500:670::-;4557:12;4539:5;:14;;;:30;4535:629;;4596:6;4587:24;;;4613:5;:16;;;4631:5;:12;;;4587:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4677:34;4697:5;:12;;;4677:5;:14;;;:18;;:34;;;;:::i;:::-;4660:5;:14;;:51;;;;4725:5;:12;;;:14;;;;;;;;;:::i;:::-;;;;;;4794:1;4771:25;;:11;;;;;;;;;;;:25;;;4766:106;;4831:11;;;;;;;;;;;4817:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4766:106;4886:12;4901:17;:15;:17::i;:::-;4886:32;;4932:11;4955:6;4946:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4932:51;;5013:6;5002:7;:17;4998:156;;5059:1;5040:5;:16;;:20;;;;4998:156;;;5118:21;5131:6;5118:7;:11;;:21;;;;:::i;:::-;5099:5;:16;;:40;;;;4998:156;4535:629;;;4500:670::o;692:26::-;;;;;;;;;;;;;:::o;490:31::-;;;:::o;7122:107::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7214:8:14::1;7197:14;:25;;;;7122:107:::0;:::o;6900:::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6987:13:14::1;6972:12;:28;;;;6900:107:::0;:::o;729:21::-;;;;;;;;;;;;;:::o;824:24::-;;;;:::o;789:29::-;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2950:669:14:-;2988:17;3008:10;:24;3020:10;3008:24;;;;;;;;;;;;;;;2988:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3049:10;:24;3061:10;3049:24;;;;;;;;;;;;;;;;3042:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3093:14;;;;;;;;;;;3084:34;;;3128:4;3144:6;3135:32;;;3169:4;:9;;;3135:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3084:98;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:1;3197:14;;:19;3192:421;;3274:12;3289:43;3326:5;3289:32;3306:14;;3289:4;:12;;;:16;;:32;;;;:::i;:::-;:36;;:43;;;;:::i;:::-;3274:58;;3346:15;3364:25;3381:7;3364:4;:12;;;:16;;:25;;;;:::i;:::-;3346:43;;3403:44;3433:3;;;;;;;;;;;3438:7;3411:5;3403:28;;;;:44;;;;;:::i;:::-;3461:54;3491:10;3503;3469:5;3461:28;;;;:54;;;;;:::i;:::-;3192:421;;;;;3546:56;3576:10;3588:4;:12;;;3554:5;3546:28;;;;:56;;;;;:::i;:::-;3192:421;2950:669;:::o;5847:223::-;5930:6;;;;;;;;;;;5916:20;;:10;:20;;;5907:31;;;;;;5961:25;5977:7;5961:10;;:14;;:25;;;;:::i;:::-;5948:10;:38;;;;5996:67;6031:6;;;;;;;;;;;6047:4;6054:7;6004:6;5996:33;;;;:67;;;;;;:::i;:::-;5847:223;:::o;2741:96:8:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;701:205:4:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;912:241:4:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;3108:96:8:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3207:706:4:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3207:706;;;:::o;3514:223:5:-;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4889:18;4900:6;4889:10;:18::i;:::-;4881:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4953:12;4967:23;4994:6;:11;;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;;;;4601:499;;;;;;:::o;771:377::-;831:4;1034:12;1099:7;1087:20;1079:28;;1140:1;1133:4;:8;1126:15;;;771:377;;;:::o;7214:692::-;7360:12;7388:7;7384:516;;;7418:10;7411:17;;;;7384:516;7549:1;7529:10;:17;:21;7525:365;;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7672:145;7862:12;7855:20;;;;;;;;;;;:::i;:::-;;;;;;;;7214:692;;;;;;:::o;7:139:27:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;351:77;;;;:::o;434:167::-;;532:6;519:20;510:29;;548:47;589:5;548:47;:::i;:::-;500:101;;;;:::o;607:139::-;;691:6;678:20;669:29;;707:33;734:5;707:33;:::i;:::-;659:87;;;;:::o;752:143::-;;840:6;834:13;825:22;;856:33;883:5;856:33;:::i;:::-;815:80;;;;:::o;901:262::-;;1009:2;997:9;988:7;984:23;980:32;977:2;;;1025:1;1022;1015:12;977:2;1068:1;1093:53;1138:7;1129:6;1118:9;1114:22;1093:53;:::i;:::-;1083:63;;1039:117;967:196;;;;:::o;1169:278::-;;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1301:1;1298;1291:12;1253:2;1344:1;1369:61;1422:7;1413:6;1402:9;1398:22;1369:61;:::i;:::-;1359:71;;1315:125;1243:204;;;;:::o;1453:435::-;;;1592:2;1580:9;1571:7;1567:23;1563:32;1560:2;;;1608:1;1605;1598:12;1560:2;1651:1;1676:67;1735:7;1726:6;1715:9;1711:22;1676:67;:::i;:::-;1666:77;;1622:131;1792:2;1818:53;1863:7;1854:6;1843:9;1839:22;1818:53;:::i;:::-;1808:63;;1763:118;1550:338;;;;;:::o;1894:262::-;;2002:2;1990:9;1981:7;1977:23;1973:32;1970:2;;;2018:1;2015;2008:12;1970:2;2061:1;2086:53;2131:7;2122:6;2111:9;2107:22;2086:53;:::i;:::-;2076:63;;2032:117;1960:196;;;;:::o;2162:284::-;;2281:2;2269:9;2260:7;2256:23;2252:32;2249:2;;;2297:1;2294;2287:12;2249:2;2340:1;2365:64;2421:7;2412:6;2401:9;2397:22;2365:64;:::i;:::-;2355:74;;2311:128;2239:207;;;;:::o;2452:407::-;;;2577:2;2565:9;2556:7;2552:23;2548:32;2545:2;;;2593:1;2590;2583:12;2545:2;2636:1;2661:53;2706:7;2697:6;2686:9;2682:22;2661:53;:::i;:::-;2651:63;;2607:117;2763:2;2789:53;2834:7;2825:6;2814:9;2810:22;2789:53;:::i;:::-;2779:63;;2734:118;2535:324;;;;;:::o;2865:401::-;;;2987:2;2975:9;2966:7;2962:23;2958:32;2955:2;;;3003:1;3000;2993:12;2955:2;3046:1;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;:::i;:::-;3061:63;;3017:117;3173:2;3199:50;3241:7;3232:6;3221:9;3217:22;3199:50;:::i;:::-;3189:60;;3144:115;2945:321;;;;;:::o;3272:118::-;3359:24;3377:5;3359:24;:::i;:::-;3354:3;3347:37;3337:53;;:::o;3396:109::-;3477:21;3492:5;3477:21;:::i;:::-;3472:3;3465:34;3455:50;;:::o;3511:373::-;;3643:38;3675:5;3643:38;:::i;:::-;3697:88;3778:6;3773:3;3697:88;:::i;:::-;3690:95;;3794:52;3839:6;3834:3;3827:4;3820:5;3816:16;3794:52;:::i;:::-;3871:6;3866:3;3862:16;3855:23;;3619:265;;;;;:::o;3890:364::-;;4006:39;4039:5;4006:39;:::i;:::-;4061:71;4125:6;4120:3;4061:71;:::i;:::-;4054:78;;4141:52;4186:6;4181:3;4174:4;4167:5;4163:16;4141:52;:::i;:::-;4218:29;4240:6;4218:29;:::i;:::-;4213:3;4209:39;4202:46;;3982:272;;;;;:::o;4260:329::-;;4423:67;4487:2;4482:3;4423:67;:::i;:::-;4416:74;;4520:33;4516:1;4511:3;4507:11;4500:54;4580:2;4575:3;4571:12;4564:19;;4406:183;;;:::o;4595:367::-;;4758:67;4822:2;4817:3;4758:67;:::i;:::-;4751:74;;4855:34;4851:1;4846:3;4842:11;4835:55;4921:5;4916:2;4911:3;4907:12;4900:27;4953:2;4948:3;4944:12;4937:19;;4741:221;;;:::o;4968:370::-;;5131:67;5195:2;5190:3;5131:67;:::i;:::-;5124:74;;5228:34;5224:1;5219:3;5215:11;5208:55;5294:8;5289:2;5284:3;5280:12;5273:30;5329:2;5324:3;5320:12;5313:19;;5114:224;;;:::o;5344:367::-;;5507:67;5571:2;5566:3;5507:67;:::i;:::-;5500:74;;5604:34;5600:1;5595:3;5591:11;5584:55;5670:5;5665:2;5660:3;5656:12;5649:27;5702:2;5697:3;5693:12;5686:19;;5490:221;;;:::o;5717:370::-;;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5977:34;5973:1;5968:3;5964:11;5957:55;6043:8;6038:2;6033:3;6029:12;6022:30;6078:2;6073:3;6069:12;6062:19;;5863:224;;;:::o;6093:330::-;;6256:67;6320:2;6315:3;6256:67;:::i;:::-;6249:74;;6353:34;6349:1;6344:3;6340:11;6333:55;6414:2;6409:3;6405:12;6398:19;;6239:184;;;:::o;6429:327::-;;6592:67;6656:2;6651:3;6592:67;:::i;:::-;6585:74;;6689:31;6685:1;6680:3;6676:11;6669:52;6747:2;6742:3;6738:12;6731:19;;6575:181;;;:::o;6762:374::-;;6925:67;6989:2;6984:3;6925:67;:::i;:::-;6918:74;;7022:34;7018:1;7013:3;7009:11;7002:55;7088:12;7083:2;7078:3;7074:12;7067:34;7127:2;7122:3;7118:12;7111:19;;6908:228;;;:::o;7142:118::-;7229:24;7247:5;7229:24;:::i;:::-;7224:3;7217:37;7207:53;;:::o;7266:271::-;;7418:93;7507:3;7498:6;7418:93;:::i;:::-;7411:100;;7528:3;7521:10;;7400:137;;;;:::o;7543:222::-;;7674:2;7663:9;7659:18;7651:26;;7687:71;7755:1;7744:9;7740:17;7731:6;7687:71;:::i;:::-;7641:124;;;;:::o;7771:442::-;;7958:2;7947:9;7943:18;7935:26;;7971:71;8039:1;8028:9;8024:17;8015:6;7971:71;:::i;:::-;8052:72;8120:2;8109:9;8105:18;8096:6;8052:72;:::i;:::-;8134;8202:2;8191:9;8187:18;8178:6;8134:72;:::i;:::-;7925:288;;;;;;:::o;8219:332::-;;8378:2;8367:9;8363:18;8355:26;;8391:71;8459:1;8448:9;8444:17;8435:6;8391:71;:::i;:::-;8472:72;8540:2;8529:9;8525:18;8516:6;8472:72;:::i;:::-;8345:206;;;;;:::o;8557:210::-;;8682:2;8671:9;8667:18;8659:26;;8695:65;8757:1;8746:9;8742:17;8733:6;8695:65;:::i;:::-;8649:118;;;;:::o;8773:313::-;;8924:2;8913:9;8909:18;8901:26;;8973:9;8967:4;8963:20;8959:1;8948:9;8944:17;8937:47;9001:78;9074:4;9065:6;9001:78;:::i;:::-;8993:86;;8891:195;;;;:::o;9092:419::-;;9296:2;9285:9;9281:18;9273:26;;9345:9;9339:4;9335:20;9331:1;9320:9;9316:17;9309:47;9373:131;9499:4;9373:131;:::i;:::-;9365:139;;9263:248;;;:::o;9517:419::-;;9721:2;9710:9;9706:18;9698:26;;9770:9;9764:4;9760:20;9756:1;9745:9;9741:17;9734:47;9798:131;9924:4;9798:131;:::i;:::-;9790:139;;9688:248;;;:::o;9942:419::-;;10146:2;10135:9;10131:18;10123:26;;10195:9;10189:4;10185:20;10181:1;10170:9;10166:17;10159:47;10223:131;10349:4;10223:131;:::i;:::-;10215:139;;10113:248;;;:::o;10367:419::-;;10571:2;10560:9;10556:18;10548:26;;10620:9;10614:4;10610:20;10606:1;10595:9;10591:17;10584:47;10648:131;10774:4;10648:131;:::i;:::-;10640:139;;10538:248;;;:::o;10792:419::-;;10996:2;10985:9;10981:18;10973:26;;11045:9;11039:4;11035:20;11031:1;11020:9;11016:17;11009:47;11073:131;11199:4;11073:131;:::i;:::-;11065:139;;10963:248;;;:::o;11217:419::-;;11421:2;11410:9;11406:18;11398:26;;11470:9;11464:4;11460:20;11456:1;11445:9;11441:17;11434:47;11498:131;11624:4;11498:131;:::i;:::-;11490:139;;11388:248;;;:::o;11642:419::-;;11846:2;11835:9;11831:18;11823:26;;11895:9;11889:4;11885:20;11881:1;11870:9;11866:17;11859:47;11923:131;12049:4;11923:131;:::i;:::-;11915:139;;11813:248;;;:::o;12067:419::-;;12271:2;12260:9;12256:18;12248:26;;12320:9;12314:4;12310:20;12306:1;12295:9;12291:17;12284:47;12348:131;12474:4;12348:131;:::i;:::-;12340:139;;12238:248;;;:::o;12492:222::-;;12623:2;12612:9;12608:18;12600:26;;12636:71;12704:1;12693:9;12689:17;12680:6;12636:71;:::i;:::-;12590:124;;;;:::o;12720:332::-;;12879:2;12868:9;12864:18;12856:26;;12892:71;12960:1;12949:9;12945:17;12936:6;12892:71;:::i;:::-;12973:72;13041:2;13030:9;13026:18;13017:6;12973:72;:::i;:::-;12846:206;;;;;:::o;13058:541::-;;13267:3;13256:9;13252:19;13244:27;;13281:71;13349:1;13338:9;13334:17;13325:6;13281:71;:::i;:::-;13362:72;13430:2;13419:9;13415:18;13406:6;13362:72;:::i;:::-;13444;13512:2;13501:9;13497:18;13488:6;13444:72;:::i;:::-;13526:66;13588:2;13577:9;13573:18;13564:6;13526:66;:::i;:::-;13234:365;;;;;;;:::o;13605:553::-;;13820:3;13809:9;13805:19;13797:27;;13834:71;13902:1;13891:9;13887:17;13878:6;13834:71;:::i;:::-;13915:72;13983:2;13972:9;13968:18;13959:6;13915:72;:::i;:::-;13997;14065:2;14054:9;14050:18;14041:6;13997:72;:::i;:::-;14079;14147:2;14136:9;14132:18;14123:6;14079:72;:::i;:::-;13787:371;;;;;;;:::o;14164:98::-;;14249:5;14243:12;14233:22;;14222:40;;;:::o;14268:99::-;;14354:5;14348:12;14338:22;;14327:40;;;:::o;14373:147::-;;14511:3;14496:18;;14486:34;;;;:::o;14526:169::-;;14644:6;14639:3;14632:19;14684:4;14679:3;14675:14;14660:29;;14622:73;;;;:::o;14701:305::-;;14760:20;14778:1;14760:20;:::i;:::-;14755:25;;14794:20;14812:1;14794:20;:::i;:::-;14789:25;;14948:1;14880:66;14876:74;14873:1;14870:81;14867:2;;;14954:18;;:::i;:::-;14867:2;14998:1;14995;14991:9;14984:16;;14745:261;;;;:::o;15012:185::-;;15069:20;15087:1;15069:20;:::i;:::-;15064:25;;15103:20;15121:1;15103:20;:::i;:::-;15098:25;;15142:1;15132:2;;15147:18;;:::i;:::-;15132:2;15189:1;15186;15182:9;15177:14;;15054:143;;;;:::o;15203:348::-;;15266:20;15284:1;15266:20;:::i;:::-;15261:25;;15300:20;15318:1;15300:20;:::i;:::-;15295:25;;15488:1;15420:66;15416:74;15413:1;15410:81;15405:1;15398:9;15391:17;15387:105;15384:2;;;15495:18;;:::i;:::-;15384:2;15543:1;15540;15536:9;15525:20;;15251:300;;;;:::o;15557:191::-;;15617:20;15635:1;15617:20;:::i;:::-;15612:25;;15651:20;15669:1;15651:20;:::i;:::-;15646:25;;15690:1;15687;15684:8;15681:2;;;15695:18;;:::i;:::-;15681:2;15740:1;15737;15733:9;15725:17;;15602:146;;;;:::o;15754:96::-;;15820:24;15838:5;15820:24;:::i;:::-;15809:35;;15799:51;;;:::o;15856:90::-;;15933:5;15926:13;15919:21;15908:32;;15898:48;;;:::o;15952:126::-;;16029:42;16022:5;16018:54;16007:65;;15997:81;;;:::o;16084:77::-;;16150:5;16139:16;;16129:32;;;:::o;16167:307::-;16235:1;16245:113;16259:6;16256:1;16253:13;16245:113;;;16344:1;16339:3;16335:11;16329:18;16325:1;16320:3;16316:11;16309:39;16281:2;16278:1;16274:10;16269:15;;16245:113;;;16376:6;16373:1;16370:13;16367:2;;;16456:1;16447:6;16442:3;16438:16;16431:27;16367:2;16216:258;;;;:::o;16480:233::-;;16542:24;16560:5;16542:24;:::i;:::-;16533:33;;16588:66;16581:5;16578:77;16575:2;;;16658:18;;:::i;:::-;16575:2;16705:1;16698:5;16694:13;16687:20;;16523:190;;;:::o;16719:180::-;16767:77;16764:1;16757:88;16864:4;16861:1;16854:15;16888:4;16885:1;16878:15;16905:180;16953:77;16950:1;16943:88;17050:4;17047:1;17040:15;17074:4;17071:1;17064:15;17091:102;;17183:2;17179:7;17174:2;17167:5;17163:14;17159:28;17149:38;;17139:54;;;:::o;17199:122::-;17272:24;17290:5;17272:24;:::i;:::-;17265:5;17262:35;17252:2;;17311:1;17308;17301:12;17252:2;17242:79;:::o;17327:116::-;17397:21;17412:5;17397:21;:::i;:::-;17390:5;17387:32;17377:2;;17433:1;17430;17423:12;17377:2;17367:76;:::o;17449:113::-;17536:1;17529:5;17526:12;17516:2;;17552:1;17549;17542:12;17516:2;17506:56;:::o;17568:122::-;17641:24;17659:5;17641:24;:::i;:::-;17634:5;17631:35;17621:2;;17680:1;17677;17670:12;17621:2;17611:79;:::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./util/ERC20Permit.sol\";\nimport \"./AthertonModels.sol\";\n\n// TODO-hightlight :: main logic\n\ncontract AthertonStaking is Ownable {\n\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address public immutable ATHER;\n    address public immutable sATHER;\n    address public DAO;\n\n    struct Epoch {\n        uint length;\n        uint number;\n        uint endBlock;\n        uint distribute;\n    }\n    Epoch public epoch;\n\n    address public distributor;\n    \n    address public locker;\n    uint public totalBonus;\n    \n    address public warmupContract;\n    uint public warmupPeriod;\n\n    uint public forfeitPenalty;\n    \n    constructor ( \n        address _DAO,\n        address _ATHER, \n        address _sATHER, \n        uint _epochLength,\n        uint _firstEpochNumber,\n        uint _firstEpochBlock\n    ) {\n        require( _DAO != address(0) );\n        DAO = _DAO;\n        require( _ATHER != address(0) );\n        ATHER = _ATHER;\n        require( _sATHER != address(0) );\n        sATHER = _sATHER;\n        \n        epoch = Epoch({\n            length: _epochLength,\n            number: _firstEpochNumber,\n            endBlock: _firstEpochBlock,\n            distribute: 0\n        });\n    }\n\n    struct Claim {\n        uint deposit;\n        uint gons;\n        uint expiry;\n        bool lock; // prevents malicious delays\n    }\n    mapping( address => Claim ) public warmupInfo;\n\n    /**\n        @notice stake ATHER to enter warmup\n        @param _amount uint\n        @return bool\n     */\n    function stake( uint _amount, address _recipient ) external returns ( bool ) {\n        rebase();\n        \n        IERC20( ATHER ).safeTransferFrom( msg.sender, address(this), _amount );\n\n        Claim memory info = warmupInfo[ _recipient ];\n        require( !info.lock, \"Deposits for account are locked\" );\n\n        warmupInfo[ _recipient ] = Claim ({\n            deposit: info.deposit.add( _amount ),\n            gons: info.gons.add( IsATHER( sATHER ).gonsForBalance( _amount ) ),\n            expiry: epoch.number.add( warmupPeriod ),\n            lock: false\n        });\n        \n        IERC20( sATHER ).safeTransfer( warmupContract, _amount );\n        return true;\n    }\n\n    /**\n        @notice retrieve sATHER from warmup\n        @param _recipient address\n     */\n    function claim ( address _recipient ) public {\n        Claim memory info = warmupInfo[ _recipient ];\n        if ( epoch.number >= info.expiry && info.expiry != 0 ) {\n            delete warmupInfo[ _recipient ];\n            IWarmup( warmupContract ).retrieve( _recipient, IsATHER( sATHER ).balanceForGons( info.gons ) );\n        }\n    }\n\n    /**\n        @notice forfeit sATHER in warmup and retrieve ATHER\n     */\n    function forfeit() external {\n        Claim memory info = warmupInfo[ msg.sender ];\n        delete warmupInfo[ msg.sender ];\n\n        IWarmup( warmupContract ).retrieve( address(this), IsATHER( sATHER ).balanceForGons( info.gons ) );\n        if ( forfeitPenalty != 0 ) { // there is penalty for early forfeiture\n            uint penalty = info.deposit.mul(forfeitPenalty).div(10000);\n            uint returnable = info.deposit.sub(penalty);\n            IERC20( ATHER ).safeTransfer( DAO, penalty );\n            IERC20( ATHER ).safeTransfer( msg.sender, returnable );\n        } else {\n            IERC20( ATHER ).safeTransfer( msg.sender, info.deposit );\n        }\n    }\n\n    /**\n        @notice prevent new deposits to address (protection from malicious activity)\n     */\n    function toggleDepositLock() external {\n        warmupInfo[ msg.sender ].lock = !warmupInfo[ msg.sender ].lock;\n    }\n\n    /**\n        @notice redeem sATHER for ATHER\n        @param _amount uint\n        @param _trigger bool\n     */\n    function unstake( uint _amount, bool _trigger ) external {\n        if ( _trigger ) {\n            rebase();\n        }\n        IERC20( sATHER ).safeTransferFrom( msg.sender, address(this), _amount );\n        IERC20( ATHER ).safeTransfer( msg.sender, _amount );\n    }\n\n    /**\n        @notice returns the sATHER index, which tracks rebase growth\n        @return uint\n     */\n    function index() public view returns ( uint ) {\n        return IsATHER( sATHER ).index();\n    }\n\n    /**\n        @notice trigger rebase if epoch over\n     */\n    function rebase() public {\n        if( epoch.endBlock <= block.number ) {\n\n            IsATHER( sATHER ).rebase( epoch.distribute, epoch.number );\n\n            epoch.endBlock = epoch.endBlock.add( epoch.length );\n            epoch.number++;\n            \n            if ( distributor != address(0) ) {\n                IDistributor( distributor ).distribute();\n            }\n\n            uint balance = contractBalance();\n            uint staked = IsATHER( sATHER ).circulatingSupply();\n\n            if( balance <= staked ) {\n                epoch.distribute = 0;\n            } else {\n                epoch.distribute = balance.sub( staked );\n            }\n        }\n    }\n\n    /**\n        @notice returns contract ATHER holdings, including bonuses provided\n        @return uint\n     */\n    function contractBalance() public view returns ( uint ) {\n        return IERC20( ATHER ).balanceOf( address(this) ).add( totalBonus );\n    }\n\n    /**\n        @notice provide bonus to locked staking contract\n        @param _amount uint\n     */\n    function giveLockBonus( uint _amount ) external {\n        require( msg.sender == locker );\n        totalBonus = totalBonus.add( _amount );\n        IERC20( sATHER ).safeTransfer( locker, _amount );\n    }\n\n    /**\n        @notice reclaim bonus from locked staking contract\n        @param _amount uint\n     */\n    function returnLockBonus( uint _amount ) external {\n        require( msg.sender == locker );\n        totalBonus = totalBonus.sub( _amount );\n        IERC20( sATHER ).safeTransferFrom( locker, address(this), _amount );\n    }\n\n    enum CONTRACTS { DISTRIBUTOR, WARMUP, LOCKER }\n\n    /**\n        @notice sets the contract address for LP staking\n        @param _contract address\n     */\n    function setContract( CONTRACTS _contract, address _address ) external onlyOwner() {\n        if( _contract == CONTRACTS.DISTRIBUTOR ) { // 0\n            distributor = _address;\n        } else if ( _contract == CONTRACTS.WARMUP ) { // 1\n            require( warmupContract == address( 0 ), \"Warmup cannot be set more than once\" );\n            warmupContract = _address;\n        } else if ( _contract == CONTRACTS.LOCKER ) { // 2\n            require( locker == address(0), \"Locker cannot be set more than once\" );\n            locker = _address;\n        }\n    }\n    \n    /**\n     * @notice set warmup period for new stakers\n     * @param _warmupPeriod uint\n     */\n    function setWarmup( uint _warmupPeriod ) external onlyOwner() {\n        warmupPeriod = _warmupPeriod;\n    }\n\n    /**\n     * @notice set warmup period for new stakers\n     * @param _penalty uint (10000 == 100%)\n     */\n    function setForfeitPenalty( uint _penalty ) external onlyOwner() {\n        forfeitPenalty = _penalty;\n    }\n\n    /* ======= Governance Contingency ======= */\n    function setDao(address newDao) external onlyOwner() {\n        DAO = newDao;\n    }\n}",
  "sourcePath": "/var/www/atherton/evm/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Address": [
        1274
      ],
      "AthertonStaking": [
        4317
      ],
      "Context": [
        1296
      ],
      "Counters": [
        1370
      ],
      "ERC20": [
        650
      ],
      "ERC20Permit": [
        7719
      ],
      "IATHERERC20": [
        1883
      ],
      "IBond": [
        1823
      ],
      "IBondCalculator": [
        1840
      ],
      "IDistributor": [
        1938
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        753
      ],
      "IERC2612Permit": [
        7554
      ],
      "IStaking": [
        1867
      ],
      "IStakingHelper": [
        1875
      ],
      "ITreasury": [
        1806
      ],
      "IWarmup": [
        1932
      ],
      "IsATHER": [
        1924
      ],
      "Ownable": [
        104
      ],
      "SafeERC20": [
        977
      ],
      "SafeMath": [
        1682
      ]
    },
    "id": 4318,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3642,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:22:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3643,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 1683,
        "src": "70:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3644,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 105,
        "src": "128:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3645,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 978,
        "src": "181:65:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/util/ERC20Permit.sol",
        "file": "./util/ERC20Permit.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 7720,
        "src": "247:32:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/AthertonModels.sol",
        "file": "./AthertonModels.sol",
        "id": 3647,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 1939,
        "src": "280:30:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3648,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "374:7:14"
            },
            "id": 3649,
            "nodeType": "InheritanceSpecifier",
            "src": "374:7:14"
          }
        ],
        "contractDependencies": [
          104,
          1296
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4317,
        "linearizedBaseContracts": [
          4317,
          104,
          1296
        ],
        "name": "AthertonStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3652,
            "libraryName": {
              "id": 3650,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1682,
              "src": "395:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "389:27:14",
            "typeName": {
              "id": 3651,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "408:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3656,
            "libraryName": {
              "id": 3653,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 977,
              "src": "427:9:14"
            },
            "nodeType": "UsingForDirective",
            "src": "421:27:14",
            "typeName": {
              "id": 3655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3654,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 728,
                "src": "441:6:14"
              },
              "referencedDeclaration": 728,
              "src": "441:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$728",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4e3d8853",
            "id": 3658,
            "mutability": "immutable",
            "name": "ATHER",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "454:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3657,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c188a200",
            "id": 3660,
            "mutability": "immutable",
            "name": "sATHER",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "490:31:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "98fabd3a",
            "id": 3662,
            "mutability": "mutable",
            "name": "DAO",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "527:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3661,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "527:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AthertonStaking.Epoch",
            "id": 3671,
            "members": [
              {
                "constant": false,
                "id": 3664,
                "mutability": "mutable",
                "name": "length",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "575:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3663,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "575:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3666,
                "mutability": "mutable",
                "name": "number",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "596:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3665,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "596:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3668,
                "mutability": "mutable",
                "name": "endBlock",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "617:13:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3667,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "617:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3670,
                "mutability": "mutable",
                "name": "distribute",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "640:15:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3669,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "640:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Epoch",
            "nodeType": "StructDefinition",
            "scope": 4317,
            "src": "552:110:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "900cf0cf",
            "id": 3674,
            "mutability": "mutable",
            "name": "epoch",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "667:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Epoch_$3671_storage",
              "typeString": "struct AthertonStaking.Epoch"
            },
            "typeName": {
              "id": 3673,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3672,
                "name": "Epoch",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3671,
                "src": "667:5:14"
              },
              "referencedDeclaration": 3671,
              "src": "667:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Epoch_$3671_storage_ptr",
                "typeString": "struct AthertonStaking.Epoch"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 3676,
            "mutability": "mutable",
            "name": "distributor",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "692:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d7b96d4e",
            "id": 3678,
            "mutability": "mutable",
            "name": "locker",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "729:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8dd07dc",
            "id": 3680,
            "mutability": "mutable",
            "name": "totalBonus",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "756:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3679,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "756:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed4acaa8",
            "id": 3682,
            "mutability": "mutable",
            "name": "warmupContract",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "789:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3681,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "deac361a",
            "id": 3684,
            "mutability": "mutable",
            "name": "warmupPeriod",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "824:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3683,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "824:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9697f58a",
            "id": 3686,
            "mutability": "mutable",
            "name": "forfeitPenalty",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "855:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3685,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "855:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3749,
              "nodeType": "Block",
              "src": "1075:383:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3702,
                          "name": "_DAO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3688,
                          "src": "1094:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1110:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1102:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3703,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1102:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1102:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1094:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1085:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3709,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:29:14"
                },
                {
                  "expression": {
                    "id": 3712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3710,
                      "name": "DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "1124:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3711,
                      "name": "_DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3688,
                      "src": "1130:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1124:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3713,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:10:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3715,
                          "name": "_ATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3690,
                          "src": "1153:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1163:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3716,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1163:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1153:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1144:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3722,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:31:14"
                },
                {
                  "expression": {
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3723,
                      "name": "ATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3658,
                      "src": "1185:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3724,
                      "name": "_ATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3690,
                      "src": "1193:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1185:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:14:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3728,
                          "name": "_sATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3692,
                          "src": "1218:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1237:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1229:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1229:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1229:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1218:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1209:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3735,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:32:14"
                },
                {
                  "expression": {
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3736,
                      "name": "sATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "1251:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3737,
                      "name": "_sATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3692,
                      "src": "1260:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1251:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3739,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:16:14"
                },
                {
                  "expression": {
                    "id": 3747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3740,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3674,
                      "src": "1286:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                        "typeString": "struct AthertonStaking.Epoch storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3742,
                          "name": "_epochLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3694,
                          "src": "1322:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3743,
                          "name": "_firstEpochNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3696,
                          "src": "1356:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3744,
                          "name": "_firstEpochBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3698,
                          "src": "1397:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 3745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1439:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3741,
                        "name": "Epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "1294:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Epoch_$3671_storage_ptr_$",
                          "typeString": "type(struct AthertonStaking.Epoch storage pointer)"
                        }
                      },
                      "id": 3746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "length",
                        "number",
                        "endBlock",
                        "distribute"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1294:157:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Epoch_$3671_memory_ptr",
                        "typeString": "struct AthertonStaking.Epoch memory"
                      }
                    },
                    "src": "1286:165:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                      "typeString": "struct AthertonStaking.Epoch storage ref"
                    }
                  },
                  "id": 3748,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:165:14"
                }
              ]
            },
            "id": 3750,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "_DAO",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "915:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3690,
                  "mutability": "mutable",
                  "name": "_ATHER",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "937:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3692,
                  "mutability": "mutable",
                  "name": "_sATHER",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "962:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3694,
                  "mutability": "mutable",
                  "name": "_epochLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "988:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3693,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3696,
                  "mutability": "mutable",
                  "name": "_firstEpochNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "1015:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "_firstEpochBlock",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "1047:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:170:14"
            },
            "returnParameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:14"
            },
            "scope": 4317,
            "src": "892:566:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "AthertonStaking.Claim",
            "id": 3759,
            "members": [
              {
                "constant": false,
                "id": 3752,
                "mutability": "mutable",
                "name": "deposit",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1487:12:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3751,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1487:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3754,
                "mutability": "mutable",
                "name": "gons",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1509:9:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3753,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3756,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1528:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3755,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3758,
                "mutability": "mutable",
                "name": "lock",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1549:9:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3757,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1549:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 4317,
            "src": "1464:130:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6746f4c2",
            "id": 3764,
            "mutability": "mutable",
            "name": "warmupInfo",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "1599:45:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
              "typeString": "mapping(address => struct AthertonStaking.Claim)"
            },
            "typeName": {
              "id": 3763,
              "keyType": {
                "id": 3760,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1608:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1599:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                "typeString": "mapping(address => struct AthertonStaking.Claim)"
              },
              "valueType": {
                "id": 3762,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3761,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3759,
                  "src": "1619:5:14"
                },
                "referencedDeclaration": 3759,
                "src": "1619:5:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                  "typeString": "struct AthertonStaking.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3842,
              "nodeType": "Block",
              "src": "1837:596:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3774,
                      "name": "rebase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4130,
                      "src": "1847:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:8:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3776,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:8:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3781,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1908:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1908:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3785,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1928:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 3784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1920:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1920:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1920:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3787,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "1935:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3778,
                            "name": "ATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "1882:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3777,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "1874:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1874:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "1874:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:70:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3789,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:70:14"
                },
                {
                  "assignments": [
                    3792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3792,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3842,
                      "src": "1955:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3791,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3790,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "1955:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "1955:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3796,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3793,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "1975:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3795,
                    "indexExpression": {
                      "id": 3794,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3769,
                      "src": "1987:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1975:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1955:44:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2018:10:14",
                        "subExpression": {
                          "expression": {
                            "id": 3798,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3792,
                            "src": "2019:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                              "typeString": "struct AthertonStaking.Claim memory"
                            }
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3758,
                          "src": "2019:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369747320666f72206163636f756e7420617265206c6f636b6564",
                        "id": 3801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7",
                          "typeString": "literal_string \"Deposits for account are locked\""
                        },
                        "value": "Deposits for account are locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7",
                          "typeString": "literal_string \"Deposits for account are locked\""
                        }
                      ],
                      "id": 3797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2009:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3803,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:56:14"
                },
                {
                  "expression": {
                    "id": 3830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3804,
                        "name": "warmupInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3764,
                        "src": "2076:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                          "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                        }
                      },
                      "id": 3806,
                      "indexExpression": {
                        "id": 3805,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "2088:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2076:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_storage",
                        "typeString": "struct AthertonStaking.Claim storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3811,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3767,
                              "src": "2151:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3808,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "2133:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "2133:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2133:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3820,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3767,
                                  "src": "2229:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3817,
                                      "name": "sATHER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3660,
                                      "src": "2204:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3816,
                                    "name": "IsATHER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2195:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                      "typeString": "type(contract IsATHER)"
                                    }
                                  },
                                  "id": 3818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2195:17:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IsATHER_$1924",
                                    "typeString": "contract IsATHER"
                                  }
                                },
                                "id": 3819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "gonsForBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1911,
                                "src": "2195:32:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 3821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2195:43:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3813,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "2180:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3814,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gons",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3754,
                              "src": "2180:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2180:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2180:60:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3826,
                              "name": "warmupPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3684,
                              "src": "2280:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3823,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "2262:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 3824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3666,
                              "src": "2262:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2262:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2262:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2314:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 3807,
                        "name": "Claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3759,
                        "src": "2103:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Claim_$3759_storage_ptr_$",
                          "typeString": "type(struct AthertonStaking.Claim storage pointer)"
                        }
                      },
                      "id": 3829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "deposit",
                        "gons",
                        "expiry",
                        "lock"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2103:227:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim memory"
                      }
                    },
                    "src": "2076:254:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "id": 3831,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:254:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3836,
                        "name": "warmupContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "2380:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3837,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "2396:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3833,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "2357:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3832,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "2349:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "2349:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3839,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:56:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2422:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3773,
                  "id": 3841,
                  "nodeType": "Return",
                  "src": "2415:11:14"
                }
              ]
            },
            "documentation": {
              "id": 3765,
              "nodeType": "StructuredDocumentation",
              "src": "1651:104:14",
              "text": "@notice stake ATHER to enter warmup\n@param _amount uint\n@return bool"
            },
            "functionSelector": "7acb7757",
            "id": 3843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1776:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3769,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1790:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1774:36:14"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1830:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:8:14"
            },
            "scope": 4317,
            "src": "1760:673:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3887,
              "nodeType": "Block",
              "src": "2578:290:14",
              "statements": [
                {
                  "assignments": [
                    3851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3851,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3887,
                      "src": "2588:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3850,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3849,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "2588:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "2588:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3855,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3852,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "2608:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3854,
                    "indexExpression": {
                      "id": 3853,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3846,
                      "src": "2620:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2608:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2588:44:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3856,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3674,
                          "src": "2647:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                            "typeString": "struct AthertonStaking.Epoch storage ref"
                          }
                        },
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3666,
                        "src": "2647:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 3858,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "2663:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                            "typeString": "struct AthertonStaking.Claim memory"
                          }
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3756,
                        "src": "2663:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2647:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3861,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "2678:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                            "typeString": "struct AthertonStaking.Claim memory"
                          }
                        },
                        "id": 3862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3756,
                        "src": "2678:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2693:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2678:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2647:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3886,
                  "nodeType": "IfStatement",
                  "src": "2642:220:14",
                  "trueBody": {
                    "id": 3885,
                    "nodeType": "Block",
                    "src": "2697:165:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2711:31:14",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3866,
                              "name": "warmupInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3764,
                              "src": "2718:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                                "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                              }
                            },
                            "id": 3868,
                            "indexExpression": {
                              "id": 3867,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3846,
                              "src": "2730:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2718:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$3759_storage",
                              "typeString": "struct AthertonStaking.Claim storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3870,
                        "nodeType": "ExpressionStatement",
                        "src": "2711:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3875,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3846,
                              "src": "2792:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3880,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3851,
                                    "src": "2838:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                      "typeString": "struct AthertonStaking.Claim memory"
                                    }
                                  },
                                  "id": 3881,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "gons",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3754,
                                  "src": "2838:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3877,
                                      "name": "sATHER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3660,
                                      "src": "2813:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3876,
                                    "name": "IsATHER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2804:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                      "typeString": "type(contract IsATHER)"
                                    }
                                  },
                                  "id": 3878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2804:17:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IsATHER_$1924",
                                    "typeString": "contract IsATHER"
                                  }
                                },
                                "id": 3879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceForGons",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1918,
                                "src": "2804:32:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 3882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2804:45:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3872,
                                  "name": "warmupContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3682,
                                  "src": "2765:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3871,
                                "name": "IWarmup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1932,
                                "src": "2756:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWarmup_$1932_$",
                                  "typeString": "type(contract IWarmup)"
                                }
                              },
                              "id": 3873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2756:25:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWarmup_$1932",
                                "typeString": "contract IWarmup"
                              }
                            },
                            "id": 3874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "retrieve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1931,
                            "src": "2756:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:95:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3884,
                        "nodeType": "ExpressionStatement",
                        "src": "2756:95:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3844,
              "nodeType": "StructuredDocumentation",
              "src": "2439:89:14",
              "text": "@notice retrieve sATHER from warmup\n@param _recipient address"
            },
            "functionSelector": "1e83409a",
            "id": 3888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3846,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3888,
                  "src": "2550:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:22:14"
            },
            "returnParameters": {
              "id": 3848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:0:14"
            },
            "scope": 4317,
            "src": "2533:335:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3975,
              "nodeType": "Block",
              "src": "2978:641:14",
              "statements": [
                {
                  "assignments": [
                    3894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3894,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3975,
                      "src": "2988:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3893,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3892,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "2988:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "2988:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3899,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3895,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "3008:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3898,
                    "indexExpression": {
                      "expression": {
                        "id": 3896,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3020:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3020:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3008:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:44:14"
                },
                {
                  "expression": {
                    "id": 3904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3042:31:14",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3900,
                        "name": "warmupInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3764,
                        "src": "3049:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                          "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                        }
                      },
                      "id": 3903,
                      "indexExpression": {
                        "expression": {
                          "id": 3901,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3061:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3061:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3049:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_storage",
                        "typeString": "struct AthertonStaking.Claim storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3905,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3912,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3128:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 3911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3120:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3120:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3120:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3918,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3894,
                              "src": "3169:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                "typeString": "struct AthertonStaking.Claim memory"
                              }
                            },
                            "id": 3919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gons",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3754,
                            "src": "3169:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3915,
                                "name": "sATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3660,
                                "src": "3144:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3914,
                              "name": "IsATHER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "3135:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                "typeString": "type(contract IsATHER)"
                              }
                            },
                            "id": 3916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3135:17:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsATHER_$1924",
                              "typeString": "contract IsATHER"
                            }
                          },
                          "id": 3917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceForGons",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1918,
                          "src": "3135:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 3920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3135:45:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3907,
                            "name": "warmupContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3682,
                            "src": "3093:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3906,
                          "name": "IWarmup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "3084:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWarmup_$1932_$",
                            "typeString": "type(contract IWarmup)"
                          }
                        },
                        "id": 3908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3084:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWarmup_$1932",
                          "typeString": "contract IWarmup"
                        }
                      },
                      "id": 3909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "3084:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:98:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3922,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:98:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3923,
                      "name": "forfeitPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3686,
                      "src": "3197:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3215:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3197:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3973,
                    "nodeType": "Block",
                    "src": "3532:81:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3967,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3576:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3576:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3969,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3894,
                                "src": "3588:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "3588:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3964,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3554:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3963,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3546:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3546:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3546:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3546:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3972,
                        "nodeType": "ExpressionStatement",
                        "src": "3546:56:14"
                      }
                    ]
                  },
                  "id": 3974,
                  "nodeType": "IfStatement",
                  "src": "3192:421:14",
                  "trueBody": {
                    "id": 3962,
                    "nodeType": "Block",
                    "src": "3219:307:14",
                    "statements": [
                      {
                        "assignments": [
                          3927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3927,
                            "mutability": "mutable",
                            "name": "penalty",
                            "nodeType": "VariableDeclaration",
                            "scope": 3962,
                            "src": "3274:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3926,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3274:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3936,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "3130303030",
                              "id": 3934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3326:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3931,
                                  "name": "forfeitPenalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3686,
                                  "src": "3306:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 3928,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3894,
                                    "src": "3289:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                      "typeString": "struct AthertonStaking.Claim memory"
                                    }
                                  },
                                  "id": 3929,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "deposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3752,
                                  "src": "3289:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1576,
                                "src": "3289:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3289:32:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1591,
                            "src": "3289:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3289:43:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3274:58:14"
                      },
                      {
                        "assignments": [
                          3938
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3938,
                            "mutability": "mutable",
                            "name": "returnable",
                            "nodeType": "VariableDeclaration",
                            "scope": 3962,
                            "src": "3346:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3937,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3346:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3944,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3942,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "3381:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3939,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3894,
                                "src": "3364:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3940,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "3364:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1561,
                            "src": "3364:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3364:25:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3346:43:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3949,
                              "name": "DAO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3662,
                              "src": "3433:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3950,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "3438:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3946,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3411:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3945,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3403:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3403:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3403:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3403:44:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3952,
                        "nodeType": "ExpressionStatement",
                        "src": "3403:44:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3957,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3491:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3491:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3959,
                              "name": "returnable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3938,
                              "src": "3503:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3954,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3469:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3953,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3461:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3461:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3461:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:54:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3961,
                        "nodeType": "ExpressionStatement",
                        "src": "3461:54:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3889,
              "nodeType": "StructuredDocumentation",
              "src": "2874:71:14",
              "text": "@notice forfeit sATHER in warmup and retrieve ATHER"
            },
            "functionSelector": "f3d86e4a",
            "id": 3976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forfeit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2966:2:14"
            },
            "returnParameters": {
              "id": 3891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2978:0:14"
            },
            "scope": 4317,
            "src": "2950:669:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3993,
              "nodeType": "Block",
              "src": "3764:79:14",
              "statements": [
                {
                  "expression": {
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3980,
                          "name": "warmupInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3764,
                          "src": "3774:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                            "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                          }
                        },
                        "id": 3983,
                        "indexExpression": {
                          "expression": {
                            "id": 3981,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3786:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3786:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3774:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage",
                          "typeString": "struct AthertonStaking.Claim storage ref"
                        }
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3758,
                      "src": "3774:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3806:30:14",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3985,
                            "name": "warmupInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3764,
                            "src": "3807:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                              "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                            }
                          },
                          "id": 3988,
                          "indexExpression": {
                            "expression": {
                              "id": 3986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3819:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3819:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3807:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_storage",
                            "typeString": "struct AthertonStaking.Claim storage ref"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3758,
                        "src": "3807:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3774:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3992,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:62:14"
                }
              ]
            },
            "documentation": {
              "id": 3977,
              "nodeType": "StructuredDocumentation",
              "src": "3625:96:14",
              "text": "@notice prevent new deposits to address (protection from malicious activity)"
            },
            "functionSelector": "8f077b83",
            "id": 3994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toggleDepositLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3752:2:14"
            },
            "returnParameters": {
              "id": 3979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3764:0:14"
            },
            "scope": 4317,
            "src": "3726:117:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4030,
              "nodeType": "Block",
              "src": "4019:207:14",
              "statements": [
                {
                  "condition": {
                    "id": 4002,
                    "name": "_trigger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3999,
                    "src": "4034:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4007,
                  "nodeType": "IfStatement",
                  "src": "4029:49:14",
                  "trueBody": {
                    "id": 4006,
                    "nodeType": "Block",
                    "src": "4045:33:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4003,
                            "name": "rebase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4130,
                            "src": "4059:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4059:8:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4005,
                        "nodeType": "ExpressionStatement",
                        "src": "4059:8:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4012,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4122:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4122:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4016,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4142:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4134:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4134:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4134:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4018,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3997,
                        "src": "4149:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4009,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "4095:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4008,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "4087:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "4087:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4087:71:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4020,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4198:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4198:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4027,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3997,
                        "src": "4210:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4022,
                            "name": "ATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "4176:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4021,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "4168:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4168:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "4168:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4168:51:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:51:14"
                }
              ]
            },
            "documentation": {
              "id": 3995,
              "nodeType": "StructuredDocumentation",
              "src": "3849:108:14",
              "text": "@notice redeem sATHER for ATHER\n@param _amount uint\n@param _trigger bool"
            },
            "functionSelector": "9ebea88c",
            "id": 4031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3997,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "3980:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3999,
                  "mutability": "mutable",
                  "name": "_trigger",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "3994:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3994:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:31:14"
            },
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:0:14"
            },
            "scope": 4317,
            "src": "3962:264:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "4384:49:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4038,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "4410:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4037,
                          "name": "IsATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1924,
                          "src": "4401:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                            "typeString": "type(contract IsATHER)"
                          }
                        },
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IsATHER_$1924",
                          "typeString": "contract IsATHER"
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1923,
                      "src": "4401:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4401:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4036,
                  "id": 4042,
                  "nodeType": "Return",
                  "src": "4394:32:14"
                }
              ]
            },
            "documentation": {
              "id": 4032,
              "nodeType": "StructuredDocumentation",
              "src": "4232:101:14",
              "text": "@notice returns the sATHER index, which tracks rebase growth\n@return uint"
            },
            "functionSelector": "2986c0e5",
            "id": 4044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "index",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4352:2:14"
            },
            "returnParameters": {
              "id": 4036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4035,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4044,
                  "src": "4377:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:8:14"
            },
            "scope": 4317,
            "src": "4338:95:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4129,
              "nodeType": "Block",
              "src": "4525:645:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4048,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3674,
                        "src": "4539:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                          "typeString": "struct AthertonStaking.Epoch storage ref"
                        }
                      },
                      "id": 4049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3668,
                      "src": "4539:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 4050,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4557:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4557:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4539:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4128,
                  "nodeType": "IfStatement",
                  "src": "4535:629:14",
                  "trueBody": {
                    "id": 4127,
                    "nodeType": "Block",
                    "src": "4572:592:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4057,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "4613:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 4058,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "distribute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3670,
                              "src": "4613:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4059,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "4631:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 4060,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3666,
                              "src": "4631:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4054,
                                  "name": "sATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3660,
                                  "src": "4596:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4053,
                                "name": "IsATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1924,
                                "src": "4587:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                  "typeString": "type(contract IsATHER)"
                                }
                              },
                              "id": 4055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4587:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsATHER_$1924",
                                "typeString": "contract IsATHER"
                              }
                            },
                            "id": 4056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rebase",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1892,
                            "src": "4587:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 4061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4587:58:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4062,
                        "nodeType": "ExpressionStatement",
                        "src": "4587:58:14"
                      },
                      {
                        "expression": {
                          "id": 4072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4063,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "4660:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                "typeString": "struct AthertonStaking.Epoch storage ref"
                              }
                            },
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "endBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3668,
                            "src": "4660:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4069,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3674,
                                  "src": "4697:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                    "typeString": "struct AthertonStaking.Epoch storage ref"
                                  }
                                },
                                "id": 4070,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3664,
                                "src": "4697:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 4066,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3674,
                                  "src": "4677:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                    "typeString": "struct AthertonStaking.Epoch storage ref"
                                  }
                                },
                                "id": 4067,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3668,
                                "src": "4677:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1546,
                              "src": "4677:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4677:34:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4660:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4073,
                        "nodeType": "ExpressionStatement",
                        "src": "4660:51:14"
                      },
                      {
                        "expression": {
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4725:14:14",
                          "subExpression": {
                            "expression": {
                              "id": 4074,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "4725:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                "typeString": "struct AthertonStaking.Epoch storage ref"
                              }
                            },
                            "id": 4076,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3666,
                            "src": "4725:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4078,
                        "nodeType": "ExpressionStatement",
                        "src": "4725:14:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4079,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3676,
                            "src": "4771:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4794:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4786:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4786:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4786:10:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4771:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4092,
                        "nodeType": "IfStatement",
                        "src": "4766:106:14",
                        "trueBody": {
                          "id": 4091,
                          "nodeType": "Block",
                          "src": "4799:73:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4086,
                                        "name": "distributor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3676,
                                        "src": "4831:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4085,
                                      "name": "IDistributor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1938,
                                      "src": "4817:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IDistributor_$1938_$",
                                        "typeString": "type(contract IDistributor)"
                                      }
                                    },
                                    "id": 4087,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4817:27:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDistributor_$1938",
                                      "typeString": "contract IDistributor"
                                    }
                                  },
                                  "id": 4088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1937,
                                  "src": "4817:38:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                                    "typeString": "function () external returns (bool)"
                                  }
                                },
                                "id": 4089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4817:40:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4090,
                              "nodeType": "ExpressionStatement",
                              "src": "4817:40:14"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4094,
                            "mutability": "mutable",
                            "name": "balance",
                            "nodeType": "VariableDeclaration",
                            "scope": 4127,
                            "src": "4886:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4093,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4886:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4097,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4095,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4150,
                            "src": "4901:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4901:17:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4886:32:14"
                      },
                      {
                        "assignments": [
                          4099
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4099,
                            "mutability": "mutable",
                            "name": "staked",
                            "nodeType": "VariableDeclaration",
                            "scope": 4127,
                            "src": "4932:11:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4098,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4932:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4105,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4101,
                                  "name": "sATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3660,
                                  "src": "4955:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4100,
                                "name": "IsATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1924,
                                "src": "4946:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                  "typeString": "type(contract IsATHER)"
                                }
                              },
                              "id": 4102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsATHER_$1924",
                                "typeString": "contract IsATHER"
                              }
                            },
                            "id": 4103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "circulatingSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1897,
                            "src": "4946:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4946:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4932:51:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4106,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4094,
                            "src": "5002:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 4107,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4099,
                            "src": "5013:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5002:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4125,
                          "nodeType": "Block",
                          "src": "5081:73:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4116,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3674,
                                    "src": "5099:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                      "typeString": "struct AthertonStaking.Epoch storage ref"
                                    }
                                  },
                                  "id": 4118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3670,
                                  "src": "5099:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 4121,
                                      "name": "staked",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4099,
                                      "src": "5131:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4119,
                                      "name": "balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4094,
                                      "src": "5118:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1561,
                                    "src": "5118:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5118:21:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5099:40:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4124,
                              "nodeType": "ExpressionStatement",
                              "src": "5099:40:14"
                            }
                          ]
                        },
                        "id": 4126,
                        "nodeType": "IfStatement",
                        "src": "4998:156:14",
                        "trueBody": {
                          "id": 4115,
                          "nodeType": "Block",
                          "src": "5022:53:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4109,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3674,
                                    "src": "5040:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                      "typeString": "struct AthertonStaking.Epoch storage ref"
                                    }
                                  },
                                  "id": 4111,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3670,
                                  "src": "5040:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 4112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5059:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5040:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4114,
                              "nodeType": "ExpressionStatement",
                              "src": "5040:20:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4045,
              "nodeType": "StructuredDocumentation",
              "src": "4439:56:14",
              "text": "@notice trigger rebase if epoch over"
            },
            "functionSelector": "af14052c",
            "id": 4130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4515:2:14"
            },
            "returnParameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4525:0:14"
            },
            "scope": 4317,
            "src": "4500:670:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4149,
              "nodeType": "Block",
              "src": "5345:84:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4146,
                        "name": "totalBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "5410:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4142,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5397:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                                  "typeString": "contract AthertonStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                                  "typeString": "contract AthertonStaking"
                                }
                              ],
                              "id": 4141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5389:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4140,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5389:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5389:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4137,
                                "name": "ATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "5370:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4136,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "5362:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 4138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5362:15:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$728",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 667,
                          "src": "5362:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5362:42:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1546,
                      "src": "5362:46:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5362:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4135,
                  "id": 4148,
                  "nodeType": "Return",
                  "src": "5355:67:14"
                }
              ]
            },
            "documentation": {
              "id": 4131,
              "nodeType": "StructuredDocumentation",
              "src": "5176:108:14",
              "text": "@notice returns contract ATHER holdings, including bonuses provided\n@return uint"
            },
            "functionSelector": "8b7afe2e",
            "id": 4150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5313:2:14"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "5338:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:8:14"
            },
            "scope": 4317,
            "src": "5289:140:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4178,
              "nodeType": "Block",
              "src": "5584:154:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5603:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5603:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4159,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3678,
                          "src": "5617:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5603:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5594:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4162,
                  "nodeType": "ExpressionStatement",
                  "src": "5594:31:14"
                },
                {
                  "expression": {
                    "id": 4168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4163,
                      "name": "totalBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "5635:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4166,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4153,
                          "src": "5664:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4164,
                          "name": "totalBonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "5648:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1546,
                        "src": "5648:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5648:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5635:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4169,
                  "nodeType": "ExpressionStatement",
                  "src": "5635:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4174,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "5714:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4175,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4153,
                        "src": "5722:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4171,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "5691:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4170,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "5683:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5683:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "5683:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4177,
                  "nodeType": "ExpressionStatement",
                  "src": "5683:48:14"
                }
              ]
            },
            "documentation": {
              "id": 4151,
              "nodeType": "StructuredDocumentation",
              "src": "5435:96:14",
              "text": "@notice provide bonus to locked staking contract\n@param _amount uint"
            },
            "functionSelector": "03c23670",
            "id": 4179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveLockBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5560:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:16:14"
            },
            "returnParameters": {
              "id": 4155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:0:14"
            },
            "scope": 4317,
            "src": "5536:202:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4211,
              "nodeType": "Block",
              "src": "5897:173:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5916:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5916:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4188,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3678,
                          "src": "5930:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5916:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5907:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4191,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:31:14"
                },
                {
                  "expression": {
                    "id": 4197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4192,
                      "name": "totalBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "5948:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4195,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4182,
                          "src": "5977:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4193,
                          "name": "totalBonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "5961:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1561,
                        "src": "5961:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5961:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5948:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4198,
                  "nodeType": "ExpressionStatement",
                  "src": "5948:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4203,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "6031:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4206,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6047:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 4205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6039:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6039:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6039:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4208,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "6054:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4200,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "6004:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4199,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "5996:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5996:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "5996:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4210,
                  "nodeType": "ExpressionStatement",
                  "src": "5996:67:14"
                }
              ]
            },
            "documentation": {
              "id": 4180,
              "nodeType": "StructuredDocumentation",
              "src": "5744:98:14",
              "text": "@notice reclaim bonus from locked staking contract\n@param _amount uint"
            },
            "functionSelector": "f62ae76a",
            "id": 4212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLockBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4182,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4212,
                  "src": "5873:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4181,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5871:16:14"
            },
            "returnParameters": {
              "id": 4184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:0:14"
            },
            "scope": 4317,
            "src": "5847:223:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AthertonStaking.CONTRACTS",
            "id": 4216,
            "members": [
              {
                "id": 4213,
                "name": "DISTRIBUTOR",
                "nodeType": "EnumValue",
                "src": "6093:11:14"
              },
              {
                "id": 4214,
                "name": "WARMUP",
                "nodeType": "EnumValue",
                "src": "6106:6:14"
              },
              {
                "id": 4215,
                "name": "LOCKER",
                "nodeType": "EnumValue",
                "src": "6114:6:14"
              }
            ],
            "name": "CONTRACTS",
            "nodeType": "EnumDefinition",
            "src": "6076:46:14"
          },
          {
            "body": {
              "id": 4277,
              "nodeType": "Block",
              "src": "6317:475:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                      "typeString": "enum AthertonStaking.CONTRACTS"
                    },
                    "id": 4230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4227,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "6331:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 4228,
                        "name": "CONTRACTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4216,
                        "src": "6344:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                          "typeString": "type(enum AthertonStaking.CONTRACTS)"
                        }
                      },
                      "id": 4229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DISTRIBUTOR",
                      "nodeType": "MemberAccess",
                      "src": "6344:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      }
                    },
                    "src": "6331:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      },
                      "id": 4239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4236,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "6431:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 4237,
                          "name": "CONTRACTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4216,
                          "src": "6444:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                            "typeString": "type(enum AthertonStaking.CONTRACTS)"
                          }
                        },
                        "id": 4238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "WARMUP",
                        "nodeType": "MemberAccess",
                        "src": "6444:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        }
                      },
                      "src": "6431:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        },
                        "id": 4258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4255,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4220,
                          "src": "6623:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                            "typeString": "enum AthertonStaking.CONTRACTS"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4256,
                            "name": "CONTRACTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4216,
                            "src": "6636:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                              "typeString": "type(enum AthertonStaking.CONTRACTS)"
                            }
                          },
                          "id": 4257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LOCKER",
                          "nodeType": "MemberAccess",
                          "src": "6636:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                            "typeString": "enum AthertonStaking.CONTRACTS"
                          }
                        },
                        "src": "6623:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 4274,
                      "nodeType": "IfStatement",
                      "src": "6618:168:14",
                      "trueBody": {
                        "id": 4273,
                        "nodeType": "Block",
                        "src": "6655:131:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 4265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4260,
                                    "name": "locker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3678,
                                    "src": "6683:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6701:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4262,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6693:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4261,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6693:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6693:10:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6683:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4c6f636b65722063616e6e6f7420626520736574206d6f7265207468616e206f6e6365",
                                  "id": 4266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6705:37:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42",
                                    "typeString": "literal_string \"Locker cannot be set more than once\""
                                  },
                                  "value": "Locker cannot be set more than once"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42",
                                    "typeString": "literal_string \"Locker cannot be set more than once\""
                                  }
                                ],
                                "id": 4259,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "6674:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 4267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6674:70:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4268,
                            "nodeType": "ExpressionStatement",
                            "src": "6674:70:14"
                          },
                          {
                            "expression": {
                              "id": 4271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 4269,
                                "name": "locker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3678,
                                "src": "6758:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 4270,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4222,
                                "src": "6767:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6758:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4272,
                            "nodeType": "ExpressionStatement",
                            "src": "6758:17:14"
                          }
                        ]
                      }
                    },
                    "id": 4275,
                    "nodeType": "IfStatement",
                    "src": "6426:360:14",
                    "trueBody": {
                      "id": 4254,
                      "nodeType": "Block",
                      "src": "6463:149:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4241,
                                  "name": "warmupContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3682,
                                  "src": "6491:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6518:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6509:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4242,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6509:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6509:12:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6491:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5761726d75702063616e6e6f7420626520736574206d6f7265207468616e206f6e6365",
                                "id": 4247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6523:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e",
                                  "typeString": "literal_string \"Warmup cannot be set more than once\""
                                },
                                "value": "Warmup cannot be set more than once"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e",
                                  "typeString": "literal_string \"Warmup cannot be set more than once\""
                                }
                              ],
                              "id": 4240,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "6482:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 4248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6482:80:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4249,
                          "nodeType": "ExpressionStatement",
                          "src": "6482:80:14"
                        },
                        {
                          "expression": {
                            "id": 4252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 4250,
                              "name": "warmupContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3682,
                              "src": "6576:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 4251,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4222,
                              "src": "6593:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6576:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4253,
                          "nodeType": "ExpressionStatement",
                          "src": "6576:25:14"
                        }
                      ]
                    }
                  },
                  "id": 4276,
                  "nodeType": "IfStatement",
                  "src": "6327:459:14",
                  "trueBody": {
                    "id": 4235,
                    "nodeType": "Block",
                    "src": "6368:52:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4231,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3676,
                            "src": "6387:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4232,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4222,
                            "src": "6401:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6387:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4234,
                        "nodeType": "ExpressionStatement",
                        "src": "6387:22:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4217,
              "nodeType": "StructuredDocumentation",
              "src": "6128:101:14",
              "text": "@notice sets the contract address for LP staking\n@param _contract address"
            },
            "functionSelector": "865e6fd3",
            "id": 4278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4225,
                "modifierName": {
                  "id": 4224,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6305:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6305:11:14"
              }
            ],
            "name": "setContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4278,
                  "src": "6256:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                    "typeString": "enum AthertonStaking.CONTRACTS"
                  },
                  "typeName": {
                    "id": 4219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4218,
                      "name": "CONTRACTS",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4216,
                      "src": "6256:9:14"
                    },
                    "referencedDeclaration": 4216,
                    "src": "6256:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                      "typeString": "enum AthertonStaking.CONTRACTS"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4222,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4278,
                  "src": "6277:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6254:41:14"
            },
            "returnParameters": {
              "id": 4226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6317:0:14"
            },
            "scope": 4317,
            "src": "6234:558:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4290,
              "nodeType": "Block",
              "src": "6962:45:14",
              "statements": [
                {
                  "expression": {
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4286,
                      "name": "warmupPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3684,
                      "src": "6972:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4287,
                      "name": "_warmupPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4281,
                      "src": "6987:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6972:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "6972:28:14"
                }
              ]
            },
            "documentation": {
              "id": 4279,
              "nodeType": "StructuredDocumentation",
              "src": "6802:93:14",
              "text": " @notice set warmup period for new stakers\n @param _warmupPeriod uint"
            },
            "functionSelector": "c9f464ff",
            "id": 4291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4284,
                "modifierName": {
                  "id": 4283,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6950:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6950:11:14"
              }
            ],
            "name": "setWarmup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4281,
                  "mutability": "mutable",
                  "name": "_warmupPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4291,
                  "src": "6920:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6918:22:14"
            },
            "returnParameters": {
              "id": 4285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:0:14"
            },
            "scope": 4317,
            "src": "6900:107:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4303,
              "nodeType": "Block",
              "src": "7187:42:14",
              "statements": [
                {
                  "expression": {
                    "id": 4301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4299,
                      "name": "forfeitPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3686,
                      "src": "7197:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4300,
                      "name": "_penalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294,
                      "src": "7214:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7197:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4302,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:25:14"
                }
              ]
            },
            "documentation": {
              "id": 4292,
              "nodeType": "StructuredDocumentation",
              "src": "7013:104:14",
              "text": " @notice set warmup period for new stakers\n @param _penalty uint (10000 == 100%)"
            },
            "functionSelector": "c289b216",
            "id": 4304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4297,
                "modifierName": {
                  "id": 4296,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7175:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7175:11:14"
              }
            ],
            "name": "setForfeitPenalty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 4304,
                  "src": "7150:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7150:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:17:14"
            },
            "returnParameters": {
              "id": 4298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7187:0:14"
            },
            "scope": 4317,
            "src": "7122:107:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4315,
              "nodeType": "Block",
              "src": "7337:29:14",
              "statements": [
                {
                  "expression": {
                    "id": 4313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4311,
                      "name": "DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "7347:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4312,
                      "name": "newDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4306,
                      "src": "7353:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7347:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4314,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:12:14"
                }
              ]
            },
            "functionSelector": "6637b882",
            "id": 4316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4309,
                "modifierName": {
                  "id": 4308,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7325:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7325:11:14"
              }
            ],
            "name": "setDao",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "newDao",
                  "nodeType": "VariableDeclaration",
                  "scope": 4316,
                  "src": "7300:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7300:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7299:16:14"
            },
            "returnParameters": {
              "id": 4310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7337:0:14"
            },
            "scope": 4317,
            "src": "7284:82:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4318,
        "src": "346:7022:14"
      }
    ],
    "src": "46:7322:14"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "Address": [
        1274
      ],
      "AthertonStaking": [
        4317
      ],
      "Context": [
        1296
      ],
      "Counters": [
        1370
      ],
      "ERC20": [
        650
      ],
      "ERC20Permit": [
        7719
      ],
      "IATHERERC20": [
        1883
      ],
      "IBond": [
        1823
      ],
      "IBondCalculator": [
        1840
      ],
      "IDistributor": [
        1938
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        753
      ],
      "IERC2612Permit": [
        7554
      ],
      "IStaking": [
        1867
      ],
      "IStakingHelper": [
        1875
      ],
      "ITreasury": [
        1806
      ],
      "IWarmup": [
        1932
      ],
      "IsATHER": [
        1924
      ],
      "Ownable": [
        104
      ],
      "SafeERC20": [
        977
      ],
      "SafeMath": [
        1682
      ]
    },
    "id": 4318,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3642,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:22:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3643,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 1683,
        "src": "70:57:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3644,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 105,
        "src": "128:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3645,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 978,
        "src": "181:65:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/util/ERC20Permit.sol",
        "file": "./util/ERC20Permit.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 7720,
        "src": "247:32:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/AthertonModels.sol",
        "file": "./AthertonModels.sol",
        "id": 3647,
        "nodeType": "ImportDirective",
        "scope": 4318,
        "sourceUnit": 1939,
        "src": "280:30:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3648,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "374:7:14"
            },
            "id": 3649,
            "nodeType": "InheritanceSpecifier",
            "src": "374:7:14"
          }
        ],
        "contractDependencies": [
          104,
          1296
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4317,
        "linearizedBaseContracts": [
          4317,
          104,
          1296
        ],
        "name": "AthertonStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3652,
            "libraryName": {
              "id": 3650,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1682,
              "src": "395:8:14"
            },
            "nodeType": "UsingForDirective",
            "src": "389:27:14",
            "typeName": {
              "id": 3651,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "408:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3656,
            "libraryName": {
              "id": 3653,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 977,
              "src": "427:9:14"
            },
            "nodeType": "UsingForDirective",
            "src": "421:27:14",
            "typeName": {
              "id": 3655,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3654,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 728,
                "src": "441:6:14"
              },
              "referencedDeclaration": 728,
              "src": "441:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$728",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4e3d8853",
            "id": 3658,
            "mutability": "immutable",
            "name": "ATHER",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "454:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3657,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c188a200",
            "id": 3660,
            "mutability": "immutable",
            "name": "sATHER",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "490:31:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "98fabd3a",
            "id": 3662,
            "mutability": "mutable",
            "name": "DAO",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "527:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3661,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "527:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AthertonStaking.Epoch",
            "id": 3671,
            "members": [
              {
                "constant": false,
                "id": 3664,
                "mutability": "mutable",
                "name": "length",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "575:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3663,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "575:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3666,
                "mutability": "mutable",
                "name": "number",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "596:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3665,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "596:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3668,
                "mutability": "mutable",
                "name": "endBlock",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "617:13:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3667,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "617:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3670,
                "mutability": "mutable",
                "name": "distribute",
                "nodeType": "VariableDeclaration",
                "scope": 3671,
                "src": "640:15:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3669,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "640:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Epoch",
            "nodeType": "StructDefinition",
            "scope": 4317,
            "src": "552:110:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "900cf0cf",
            "id": 3674,
            "mutability": "mutable",
            "name": "epoch",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "667:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Epoch_$3671_storage",
              "typeString": "struct AthertonStaking.Epoch"
            },
            "typeName": {
              "id": 3673,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3672,
                "name": "Epoch",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3671,
                "src": "667:5:14"
              },
              "referencedDeclaration": 3671,
              "src": "667:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Epoch_$3671_storage_ptr",
                "typeString": "struct AthertonStaking.Epoch"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 3676,
            "mutability": "mutable",
            "name": "distributor",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "692:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d7b96d4e",
            "id": 3678,
            "mutability": "mutable",
            "name": "locker",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "729:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8dd07dc",
            "id": 3680,
            "mutability": "mutable",
            "name": "totalBonus",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "756:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3679,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "756:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed4acaa8",
            "id": 3682,
            "mutability": "mutable",
            "name": "warmupContract",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "789:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3681,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "deac361a",
            "id": 3684,
            "mutability": "mutable",
            "name": "warmupPeriod",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "824:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3683,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "824:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9697f58a",
            "id": 3686,
            "mutability": "mutable",
            "name": "forfeitPenalty",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "855:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3685,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "855:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3749,
              "nodeType": "Block",
              "src": "1075:383:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3702,
                          "name": "_DAO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3688,
                          "src": "1094:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1110:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1102:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3703,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1102:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1102:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1094:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1085:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3709,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:29:14"
                },
                {
                  "expression": {
                    "id": 3712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3710,
                      "name": "DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "1124:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3711,
                      "name": "_DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3688,
                      "src": "1130:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1124:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3713,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:10:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3715,
                          "name": "_ATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3690,
                          "src": "1153:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1163:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3716,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1163:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1153:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1144:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3722,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:31:14"
                },
                {
                  "expression": {
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3723,
                      "name": "ATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3658,
                      "src": "1185:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3724,
                      "name": "_ATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3690,
                      "src": "1193:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1185:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:14:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3728,
                          "name": "_sATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3692,
                          "src": "1218:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1237:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1229:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1229:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1229:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1218:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1209:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3735,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:32:14"
                },
                {
                  "expression": {
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3736,
                      "name": "sATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "1251:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3737,
                      "name": "_sATHER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3692,
                      "src": "1260:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1251:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3739,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:16:14"
                },
                {
                  "expression": {
                    "id": 3747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3740,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3674,
                      "src": "1286:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                        "typeString": "struct AthertonStaking.Epoch storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3742,
                          "name": "_epochLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3694,
                          "src": "1322:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3743,
                          "name": "_firstEpochNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3696,
                          "src": "1356:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3744,
                          "name": "_firstEpochBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3698,
                          "src": "1397:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 3745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1439:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3741,
                        "name": "Epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "1294:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Epoch_$3671_storage_ptr_$",
                          "typeString": "type(struct AthertonStaking.Epoch storage pointer)"
                        }
                      },
                      "id": 3746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "length",
                        "number",
                        "endBlock",
                        "distribute"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1294:157:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Epoch_$3671_memory_ptr",
                        "typeString": "struct AthertonStaking.Epoch memory"
                      }
                    },
                    "src": "1286:165:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                      "typeString": "struct AthertonStaking.Epoch storage ref"
                    }
                  },
                  "id": 3748,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:165:14"
                }
              ]
            },
            "id": 3750,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "_DAO",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "915:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3690,
                  "mutability": "mutable",
                  "name": "_ATHER",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "937:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3692,
                  "mutability": "mutable",
                  "name": "_sATHER",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "962:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3694,
                  "mutability": "mutable",
                  "name": "_epochLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "988:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3693,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3696,
                  "mutability": "mutable",
                  "name": "_firstEpochNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "1015:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "_firstEpochBlock",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "1047:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:170:14"
            },
            "returnParameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:14"
            },
            "scope": 4317,
            "src": "892:566:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "AthertonStaking.Claim",
            "id": 3759,
            "members": [
              {
                "constant": false,
                "id": 3752,
                "mutability": "mutable",
                "name": "deposit",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1487:12:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3751,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1487:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3754,
                "mutability": "mutable",
                "name": "gons",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1509:9:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3753,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3756,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1528:11:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3755,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3758,
                "mutability": "mutable",
                "name": "lock",
                "nodeType": "VariableDeclaration",
                "scope": 3759,
                "src": "1549:9:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3757,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1549:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 4317,
            "src": "1464:130:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6746f4c2",
            "id": 3764,
            "mutability": "mutable",
            "name": "warmupInfo",
            "nodeType": "VariableDeclaration",
            "scope": 4317,
            "src": "1599:45:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
              "typeString": "mapping(address => struct AthertonStaking.Claim)"
            },
            "typeName": {
              "id": 3763,
              "keyType": {
                "id": 3760,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1608:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1599:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                "typeString": "mapping(address => struct AthertonStaking.Claim)"
              },
              "valueType": {
                "id": 3762,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3761,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3759,
                  "src": "1619:5:14"
                },
                "referencedDeclaration": 3759,
                "src": "1619:5:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                  "typeString": "struct AthertonStaking.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3842,
              "nodeType": "Block",
              "src": "1837:596:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3774,
                      "name": "rebase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4130,
                      "src": "1847:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:8:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3776,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:8:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3781,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1908:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1908:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3785,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1928:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 3784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1920:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1920:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1920:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3787,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "1935:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3778,
                            "name": "ATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "1882:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3777,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "1874:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1874:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "1874:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:70:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3789,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:70:14"
                },
                {
                  "assignments": [
                    3792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3792,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3842,
                      "src": "1955:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3791,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3790,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "1955:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "1955:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3796,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3793,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "1975:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3795,
                    "indexExpression": {
                      "id": 3794,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3769,
                      "src": "1987:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1975:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1955:44:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2018:10:14",
                        "subExpression": {
                          "expression": {
                            "id": 3798,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3792,
                            "src": "2019:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                              "typeString": "struct AthertonStaking.Claim memory"
                            }
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3758,
                          "src": "2019:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f7369747320666f72206163636f756e7420617265206c6f636b6564",
                        "id": 3801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7",
                          "typeString": "literal_string \"Deposits for account are locked\""
                        },
                        "value": "Deposits for account are locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a46fc67f118bce09509b3d1410cd9b5ed0ef67e716465d5cc55d001a18bbba7",
                          "typeString": "literal_string \"Deposits for account are locked\""
                        }
                      ],
                      "id": 3797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2009:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3803,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:56:14"
                },
                {
                  "expression": {
                    "id": 3830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3804,
                        "name": "warmupInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3764,
                        "src": "2076:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                          "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                        }
                      },
                      "id": 3806,
                      "indexExpression": {
                        "id": 3805,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "2088:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2076:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_storage",
                        "typeString": "struct AthertonStaking.Claim storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3811,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3767,
                              "src": "2151:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3808,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "2133:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "2133:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2133:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:27:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3820,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3767,
                                  "src": "2229:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3817,
                                      "name": "sATHER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3660,
                                      "src": "2204:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3816,
                                    "name": "IsATHER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2195:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                      "typeString": "type(contract IsATHER)"
                                    }
                                  },
                                  "id": 3818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2195:17:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IsATHER_$1924",
                                    "typeString": "contract IsATHER"
                                  }
                                },
                                "id": 3819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "gonsForBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1911,
                                "src": "2195:32:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 3821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2195:43:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3813,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "2180:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3814,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gons",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3754,
                              "src": "2180:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2180:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2180:60:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3826,
                              "name": "warmupPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3684,
                              "src": "2280:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3823,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "2262:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 3824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3666,
                              "src": "2262:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1546,
                            "src": "2262:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2262:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2314:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 3807,
                        "name": "Claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3759,
                        "src": "2103:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Claim_$3759_storage_ptr_$",
                          "typeString": "type(struct AthertonStaking.Claim storage pointer)"
                        }
                      },
                      "id": 3829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "deposit",
                        "gons",
                        "expiry",
                        "lock"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2103:227:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim memory"
                      }
                    },
                    "src": "2076:254:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "id": 3831,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:254:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3836,
                        "name": "warmupContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "2380:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3837,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "2396:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3833,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "2357:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3832,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "2349:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "2349:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3839,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:56:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2422:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3773,
                  "id": 3841,
                  "nodeType": "Return",
                  "src": "2415:11:14"
                }
              ]
            },
            "documentation": {
              "id": 3765,
              "nodeType": "StructuredDocumentation",
              "src": "1651:104:14",
              "text": "@notice stake ATHER to enter warmup\n@param _amount uint\n@return bool"
            },
            "functionSelector": "7acb7757",
            "id": 3843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1776:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3769,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1790:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1774:36:14"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "1830:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:8:14"
            },
            "scope": 4317,
            "src": "1760:673:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3887,
              "nodeType": "Block",
              "src": "2578:290:14",
              "statements": [
                {
                  "assignments": [
                    3851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3851,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3887,
                      "src": "2588:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3850,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3849,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "2588:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "2588:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3855,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3852,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "2608:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3854,
                    "indexExpression": {
                      "id": 3853,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3846,
                      "src": "2620:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2608:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2588:44:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3856,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3674,
                          "src": "2647:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                            "typeString": "struct AthertonStaking.Epoch storage ref"
                          }
                        },
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3666,
                        "src": "2647:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 3858,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "2663:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                            "typeString": "struct AthertonStaking.Claim memory"
                          }
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3756,
                        "src": "2663:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2647:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3861,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "2678:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                            "typeString": "struct AthertonStaking.Claim memory"
                          }
                        },
                        "id": 3862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3756,
                        "src": "2678:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2693:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2678:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2647:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3886,
                  "nodeType": "IfStatement",
                  "src": "2642:220:14",
                  "trueBody": {
                    "id": 3885,
                    "nodeType": "Block",
                    "src": "2697:165:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2711:31:14",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3866,
                              "name": "warmupInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3764,
                              "src": "2718:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                                "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                              }
                            },
                            "id": 3868,
                            "indexExpression": {
                              "id": 3867,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3846,
                              "src": "2730:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2718:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$3759_storage",
                              "typeString": "struct AthertonStaking.Claim storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3870,
                        "nodeType": "ExpressionStatement",
                        "src": "2711:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3875,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3846,
                              "src": "2792:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3880,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3851,
                                    "src": "2838:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                      "typeString": "struct AthertonStaking.Claim memory"
                                    }
                                  },
                                  "id": 3881,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "gons",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3754,
                                  "src": "2838:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3877,
                                      "name": "sATHER",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3660,
                                      "src": "2813:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3876,
                                    "name": "IsATHER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2804:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                      "typeString": "type(contract IsATHER)"
                                    }
                                  },
                                  "id": 3878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2804:17:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IsATHER_$1924",
                                    "typeString": "contract IsATHER"
                                  }
                                },
                                "id": 3879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceForGons",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1918,
                                "src": "2804:32:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 3882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2804:45:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3872,
                                  "name": "warmupContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3682,
                                  "src": "2765:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3871,
                                "name": "IWarmup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1932,
                                "src": "2756:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWarmup_$1932_$",
                                  "typeString": "type(contract IWarmup)"
                                }
                              },
                              "id": 3873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2756:25:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWarmup_$1932",
                                "typeString": "contract IWarmup"
                              }
                            },
                            "id": 3874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "retrieve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1931,
                            "src": "2756:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:95:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3884,
                        "nodeType": "ExpressionStatement",
                        "src": "2756:95:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3844,
              "nodeType": "StructuredDocumentation",
              "src": "2439:89:14",
              "text": "@notice retrieve sATHER from warmup\n@param _recipient address"
            },
            "functionSelector": "1e83409a",
            "id": 3888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3846,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3888,
                  "src": "2550:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:22:14"
            },
            "returnParameters": {
              "id": 3848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:0:14"
            },
            "scope": 4317,
            "src": "2533:335:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3975,
              "nodeType": "Block",
              "src": "2978:641:14",
              "statements": [
                {
                  "assignments": [
                    3894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3894,
                      "mutability": "mutable",
                      "name": "info",
                      "nodeType": "VariableDeclaration",
                      "scope": 3975,
                      "src": "2988:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                        "typeString": "struct AthertonStaking.Claim"
                      },
                      "typeName": {
                        "id": 3893,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3892,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3759,
                          "src": "2988:5:14"
                        },
                        "referencedDeclaration": 3759,
                        "src": "2988:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage_ptr",
                          "typeString": "struct AthertonStaking.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3899,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3895,
                      "name": "warmupInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "3008:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                        "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                      }
                    },
                    "id": 3898,
                    "indexExpression": {
                      "expression": {
                        "id": 3896,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3020:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3020:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3008:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$3759_storage",
                      "typeString": "struct AthertonStaking.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:44:14"
                },
                {
                  "expression": {
                    "id": 3904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3042:31:14",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3900,
                        "name": "warmupInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3764,
                        "src": "3049:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                          "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                        }
                      },
                      "id": 3903,
                      "indexExpression": {
                        "expression": {
                          "id": 3901,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3061:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3061:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3049:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$3759_storage",
                        "typeString": "struct AthertonStaking.Claim storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3905,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3912,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3128:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 3911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3120:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3120:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3120:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3918,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3894,
                              "src": "3169:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                "typeString": "struct AthertonStaking.Claim memory"
                              }
                            },
                            "id": 3919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gons",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3754,
                            "src": "3169:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3915,
                                "name": "sATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3660,
                                "src": "3144:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3914,
                              "name": "IsATHER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1924,
                              "src": "3135:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                "typeString": "type(contract IsATHER)"
                              }
                            },
                            "id": 3916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3135:17:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsATHER_$1924",
                              "typeString": "contract IsATHER"
                            }
                          },
                          "id": 3917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceForGons",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1918,
                          "src": "3135:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 3920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3135:45:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3907,
                            "name": "warmupContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3682,
                            "src": "3093:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3906,
                          "name": "IWarmup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "3084:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWarmup_$1932_$",
                            "typeString": "type(contract IWarmup)"
                          }
                        },
                        "id": 3908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3084:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWarmup_$1932",
                          "typeString": "contract IWarmup"
                        }
                      },
                      "id": 3909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "3084:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:98:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3922,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:98:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3923,
                      "name": "forfeitPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3686,
                      "src": "3197:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3215:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3197:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3973,
                    "nodeType": "Block",
                    "src": "3532:81:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3967,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3576:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3576:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3969,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3894,
                                "src": "3588:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "3588:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3964,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3554:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3963,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3546:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3546:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3546:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3546:56:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3972,
                        "nodeType": "ExpressionStatement",
                        "src": "3546:56:14"
                      }
                    ]
                  },
                  "id": 3974,
                  "nodeType": "IfStatement",
                  "src": "3192:421:14",
                  "trueBody": {
                    "id": 3962,
                    "nodeType": "Block",
                    "src": "3219:307:14",
                    "statements": [
                      {
                        "assignments": [
                          3927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3927,
                            "mutability": "mutable",
                            "name": "penalty",
                            "nodeType": "VariableDeclaration",
                            "scope": 3962,
                            "src": "3274:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3926,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3274:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3936,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "3130303030",
                              "id": 3934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3326:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3931,
                                  "name": "forfeitPenalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3686,
                                  "src": "3306:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 3928,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3894,
                                    "src": "3289:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                      "typeString": "struct AthertonStaking.Claim memory"
                                    }
                                  },
                                  "id": 3929,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "deposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3752,
                                  "src": "3289:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1576,
                                "src": "3289:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3289:32:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1591,
                            "src": "3289:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3289:43:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3274:58:14"
                      },
                      {
                        "assignments": [
                          3938
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3938,
                            "mutability": "mutable",
                            "name": "returnable",
                            "nodeType": "VariableDeclaration",
                            "scope": 3962,
                            "src": "3346:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3937,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3346:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3944,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3942,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "3381:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 3939,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3894,
                                "src": "3364:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$3759_memory_ptr",
                                  "typeString": "struct AthertonStaking.Claim memory"
                                }
                              },
                              "id": 3940,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3752,
                              "src": "3364:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1561,
                            "src": "3364:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3364:25:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3346:43:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3949,
                              "name": "DAO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3662,
                              "src": "3433:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3950,
                              "name": "penalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3927,
                              "src": "3438:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3946,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3411:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3945,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3403:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3403:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3403:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3403:44:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3952,
                        "nodeType": "ExpressionStatement",
                        "src": "3403:44:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3957,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3491:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3491:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3959,
                              "name": "returnable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3938,
                              "src": "3503:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3954,
                                  "name": "ATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3658,
                                  "src": "3469:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3953,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "3461:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3461:15:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$728",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 784,
                            "src": "3461:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:54:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3961,
                        "nodeType": "ExpressionStatement",
                        "src": "3461:54:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3889,
              "nodeType": "StructuredDocumentation",
              "src": "2874:71:14",
              "text": "@notice forfeit sATHER in warmup and retrieve ATHER"
            },
            "functionSelector": "f3d86e4a",
            "id": 3976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forfeit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2966:2:14"
            },
            "returnParameters": {
              "id": 3891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2978:0:14"
            },
            "scope": 4317,
            "src": "2950:669:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3993,
              "nodeType": "Block",
              "src": "3764:79:14",
              "statements": [
                {
                  "expression": {
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3980,
                          "name": "warmupInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3764,
                          "src": "3774:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                            "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                          }
                        },
                        "id": 3983,
                        "indexExpression": {
                          "expression": {
                            "id": 3981,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3786:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3786:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3774:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$3759_storage",
                          "typeString": "struct AthertonStaking.Claim storage ref"
                        }
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3758,
                      "src": "3774:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3806:30:14",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3985,
                            "name": "warmupInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3764,
                            "src": "3807:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Claim_$3759_storage_$",
                              "typeString": "mapping(address => struct AthertonStaking.Claim storage ref)"
                            }
                          },
                          "id": 3988,
                          "indexExpression": {
                            "expression": {
                              "id": 3986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3819:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3819:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3807:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$3759_storage",
                            "typeString": "struct AthertonStaking.Claim storage ref"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3758,
                        "src": "3807:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3774:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3992,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:62:14"
                }
              ]
            },
            "documentation": {
              "id": 3977,
              "nodeType": "StructuredDocumentation",
              "src": "3625:96:14",
              "text": "@notice prevent new deposits to address (protection from malicious activity)"
            },
            "functionSelector": "8f077b83",
            "id": 3994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toggleDepositLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3752:2:14"
            },
            "returnParameters": {
              "id": 3979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3764:0:14"
            },
            "scope": 4317,
            "src": "3726:117:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4030,
              "nodeType": "Block",
              "src": "4019:207:14",
              "statements": [
                {
                  "condition": {
                    "id": 4002,
                    "name": "_trigger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3999,
                    "src": "4034:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4007,
                  "nodeType": "IfStatement",
                  "src": "4029:49:14",
                  "trueBody": {
                    "id": 4006,
                    "nodeType": "Block",
                    "src": "4045:33:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4003,
                            "name": "rebase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4130,
                            "src": "4059:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4059:8:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4005,
                        "nodeType": "ExpressionStatement",
                        "src": "4059:8:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4012,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4122:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4122:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4016,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4142:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4134:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4134:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4134:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4018,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3997,
                        "src": "4149:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4009,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "4095:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4008,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "4087:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "4087:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4087:71:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4020,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4198:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4198:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4027,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3997,
                        "src": "4210:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4022,
                            "name": "ATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "4176:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4021,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "4168:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4168:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "4168:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4168:51:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:51:14"
                }
              ]
            },
            "documentation": {
              "id": 3995,
              "nodeType": "StructuredDocumentation",
              "src": "3849:108:14",
              "text": "@notice redeem sATHER for ATHER\n@param _amount uint\n@param _trigger bool"
            },
            "functionSelector": "9ebea88c",
            "id": 4031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3997,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "3980:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3999,
                  "mutability": "mutable",
                  "name": "_trigger",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "3994:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3994:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:31:14"
            },
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:0:14"
            },
            "scope": 4317,
            "src": "3962:264:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "4384:49:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4038,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "4410:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4037,
                          "name": "IsATHER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1924,
                          "src": "4401:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                            "typeString": "type(contract IsATHER)"
                          }
                        },
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:17:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IsATHER_$1924",
                          "typeString": "contract IsATHER"
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1923,
                      "src": "4401:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4401:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4036,
                  "id": 4042,
                  "nodeType": "Return",
                  "src": "4394:32:14"
                }
              ]
            },
            "documentation": {
              "id": 4032,
              "nodeType": "StructuredDocumentation",
              "src": "4232:101:14",
              "text": "@notice returns the sATHER index, which tracks rebase growth\n@return uint"
            },
            "functionSelector": "2986c0e5",
            "id": 4044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "index",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4352:2:14"
            },
            "returnParameters": {
              "id": 4036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4035,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4044,
                  "src": "4377:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:8:14"
            },
            "scope": 4317,
            "src": "4338:95:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4129,
              "nodeType": "Block",
              "src": "4525:645:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4048,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3674,
                        "src": "4539:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                          "typeString": "struct AthertonStaking.Epoch storage ref"
                        }
                      },
                      "id": 4049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3668,
                      "src": "4539:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 4050,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4557:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4557:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4539:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4128,
                  "nodeType": "IfStatement",
                  "src": "4535:629:14",
                  "trueBody": {
                    "id": 4127,
                    "nodeType": "Block",
                    "src": "4572:592:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4057,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "4613:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 4058,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "distribute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3670,
                              "src": "4613:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4059,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3674,
                                "src": "4631:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                  "typeString": "struct AthertonStaking.Epoch storage ref"
                                }
                              },
                              "id": 4060,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3666,
                              "src": "4631:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4054,
                                  "name": "sATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3660,
                                  "src": "4596:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4053,
                                "name": "IsATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1924,
                                "src": "4587:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                  "typeString": "type(contract IsATHER)"
                                }
                              },
                              "id": 4055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4587:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsATHER_$1924",
                                "typeString": "contract IsATHER"
                              }
                            },
                            "id": 4056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rebase",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1892,
                            "src": "4587:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 4061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4587:58:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4062,
                        "nodeType": "ExpressionStatement",
                        "src": "4587:58:14"
                      },
                      {
                        "expression": {
                          "id": 4072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4063,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "4660:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                "typeString": "struct AthertonStaking.Epoch storage ref"
                              }
                            },
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "endBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3668,
                            "src": "4660:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4069,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3674,
                                  "src": "4697:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                    "typeString": "struct AthertonStaking.Epoch storage ref"
                                  }
                                },
                                "id": 4070,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3664,
                                "src": "4697:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 4066,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3674,
                                  "src": "4677:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                    "typeString": "struct AthertonStaking.Epoch storage ref"
                                  }
                                },
                                "id": 4067,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3668,
                                "src": "4677:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1546,
                              "src": "4677:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4677:34:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4660:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4073,
                        "nodeType": "ExpressionStatement",
                        "src": "4660:51:14"
                      },
                      {
                        "expression": {
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4725:14:14",
                          "subExpression": {
                            "expression": {
                              "id": 4074,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "4725:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                "typeString": "struct AthertonStaking.Epoch storage ref"
                              }
                            },
                            "id": 4076,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3666,
                            "src": "4725:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4078,
                        "nodeType": "ExpressionStatement",
                        "src": "4725:14:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4079,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3676,
                            "src": "4771:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4794:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4786:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4786:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4786:10:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4771:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4092,
                        "nodeType": "IfStatement",
                        "src": "4766:106:14",
                        "trueBody": {
                          "id": 4091,
                          "nodeType": "Block",
                          "src": "4799:73:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4086,
                                        "name": "distributor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3676,
                                        "src": "4831:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4085,
                                      "name": "IDistributor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1938,
                                      "src": "4817:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IDistributor_$1938_$",
                                        "typeString": "type(contract IDistributor)"
                                      }
                                    },
                                    "id": 4087,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4817:27:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDistributor_$1938",
                                      "typeString": "contract IDistributor"
                                    }
                                  },
                                  "id": 4088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1937,
                                  "src": "4817:38:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                                    "typeString": "function () external returns (bool)"
                                  }
                                },
                                "id": 4089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4817:40:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4090,
                              "nodeType": "ExpressionStatement",
                              "src": "4817:40:14"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4094,
                            "mutability": "mutable",
                            "name": "balance",
                            "nodeType": "VariableDeclaration",
                            "scope": 4127,
                            "src": "4886:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4093,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4886:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4097,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4095,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4150,
                            "src": "4901:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4901:17:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4886:32:14"
                      },
                      {
                        "assignments": [
                          4099
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4099,
                            "mutability": "mutable",
                            "name": "staked",
                            "nodeType": "VariableDeclaration",
                            "scope": 4127,
                            "src": "4932:11:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4098,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4932:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4105,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4101,
                                  "name": "sATHER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3660,
                                  "src": "4955:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4100,
                                "name": "IsATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1924,
                                "src": "4946:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IsATHER_$1924_$",
                                  "typeString": "type(contract IsATHER)"
                                }
                              },
                              "id": 4102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsATHER_$1924",
                                "typeString": "contract IsATHER"
                              }
                            },
                            "id": 4103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "circulatingSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1897,
                            "src": "4946:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4946:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4932:51:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4106,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4094,
                            "src": "5002:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 4107,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4099,
                            "src": "5013:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5002:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4125,
                          "nodeType": "Block",
                          "src": "5081:73:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4116,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3674,
                                    "src": "5099:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                      "typeString": "struct AthertonStaking.Epoch storage ref"
                                    }
                                  },
                                  "id": 4118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3670,
                                  "src": "5099:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 4121,
                                      "name": "staked",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4099,
                                      "src": "5131:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4119,
                                      "name": "balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4094,
                                      "src": "5118:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1561,
                                    "src": "5118:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5118:21:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5099:40:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4124,
                              "nodeType": "ExpressionStatement",
                              "src": "5099:40:14"
                            }
                          ]
                        },
                        "id": 4126,
                        "nodeType": "IfStatement",
                        "src": "4998:156:14",
                        "trueBody": {
                          "id": 4115,
                          "nodeType": "Block",
                          "src": "5022:53:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 4113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4109,
                                    "name": "epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3674,
                                    "src": "5040:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Epoch_$3671_storage",
                                      "typeString": "struct AthertonStaking.Epoch storage ref"
                                    }
                                  },
                                  "id": 4111,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "distribute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3670,
                                  "src": "5040:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 4112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5059:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5040:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4114,
                              "nodeType": "ExpressionStatement",
                              "src": "5040:20:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4045,
              "nodeType": "StructuredDocumentation",
              "src": "4439:56:14",
              "text": "@notice trigger rebase if epoch over"
            },
            "functionSelector": "af14052c",
            "id": 4130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4515:2:14"
            },
            "returnParameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4525:0:14"
            },
            "scope": 4317,
            "src": "4500:670:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4149,
              "nodeType": "Block",
              "src": "5345:84:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4146,
                        "name": "totalBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "5410:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4142,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5397:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                                  "typeString": "contract AthertonStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                                  "typeString": "contract AthertonStaking"
                                }
                              ],
                              "id": 4141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5389:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4140,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5389:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5389:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 4137,
                                "name": "ATHER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "5370:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4136,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "5362:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 4138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5362:15:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$728",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 667,
                          "src": "5362:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5362:42:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1546,
                      "src": "5362:46:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5362:60:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4135,
                  "id": 4148,
                  "nodeType": "Return",
                  "src": "5355:67:14"
                }
              ]
            },
            "documentation": {
              "id": 4131,
              "nodeType": "StructuredDocumentation",
              "src": "5176:108:14",
              "text": "@notice returns contract ATHER holdings, including bonuses provided\n@return uint"
            },
            "functionSelector": "8b7afe2e",
            "id": 4150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5313:2:14"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "5338:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:8:14"
            },
            "scope": 4317,
            "src": "5289:140:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4178,
              "nodeType": "Block",
              "src": "5584:154:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5603:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5603:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4159,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3678,
                          "src": "5617:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5603:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5594:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4162,
                  "nodeType": "ExpressionStatement",
                  "src": "5594:31:14"
                },
                {
                  "expression": {
                    "id": 4168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4163,
                      "name": "totalBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "5635:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4166,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4153,
                          "src": "5664:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4164,
                          "name": "totalBonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "5648:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1546,
                        "src": "5648:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5648:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5635:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4169,
                  "nodeType": "ExpressionStatement",
                  "src": "5635:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4174,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "5714:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4175,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4153,
                        "src": "5722:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4171,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "5691:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4170,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "5683:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5683:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 784,
                      "src": "5683:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4177,
                  "nodeType": "ExpressionStatement",
                  "src": "5683:48:14"
                }
              ]
            },
            "documentation": {
              "id": 4151,
              "nodeType": "StructuredDocumentation",
              "src": "5435:96:14",
              "text": "@notice provide bonus to locked staking contract\n@param _amount uint"
            },
            "functionSelector": "03c23670",
            "id": 4179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveLockBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "5560:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:16:14"
            },
            "returnParameters": {
              "id": 4155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:0:14"
            },
            "scope": 4317,
            "src": "5536:202:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4211,
              "nodeType": "Block",
              "src": "5897:173:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5916:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5916:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4188,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3678,
                          "src": "5930:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5916:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5907:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4191,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:31:14"
                },
                {
                  "expression": {
                    "id": 4197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4192,
                      "name": "totalBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "5948:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4195,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4182,
                          "src": "5977:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4193,
                          "name": "totalBonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3680,
                          "src": "5961:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1561,
                        "src": "5961:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5961:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5948:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4198,
                  "nodeType": "ExpressionStatement",
                  "src": "5948:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4203,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "6031:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4206,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6047:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AthertonStaking_$4317",
                              "typeString": "contract AthertonStaking"
                            }
                          ],
                          "id": 4205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6039:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6039:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6039:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4208,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "6054:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4200,
                            "name": "sATHER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3660,
                            "src": "6004:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4199,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "5996:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5996:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 810,
                      "src": "5996:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$728_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$728_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4210,
                  "nodeType": "ExpressionStatement",
                  "src": "5996:67:14"
                }
              ]
            },
            "documentation": {
              "id": 4180,
              "nodeType": "StructuredDocumentation",
              "src": "5744:98:14",
              "text": "@notice reclaim bonus from locked staking contract\n@param _amount uint"
            },
            "functionSelector": "f62ae76a",
            "id": 4212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLockBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4182,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4212,
                  "src": "5873:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4181,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5871:16:14"
            },
            "returnParameters": {
              "id": 4184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:0:14"
            },
            "scope": 4317,
            "src": "5847:223:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AthertonStaking.CONTRACTS",
            "id": 4216,
            "members": [
              {
                "id": 4213,
                "name": "DISTRIBUTOR",
                "nodeType": "EnumValue",
                "src": "6093:11:14"
              },
              {
                "id": 4214,
                "name": "WARMUP",
                "nodeType": "EnumValue",
                "src": "6106:6:14"
              },
              {
                "id": 4215,
                "name": "LOCKER",
                "nodeType": "EnumValue",
                "src": "6114:6:14"
              }
            ],
            "name": "CONTRACTS",
            "nodeType": "EnumDefinition",
            "src": "6076:46:14"
          },
          {
            "body": {
              "id": 4277,
              "nodeType": "Block",
              "src": "6317:475:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                      "typeString": "enum AthertonStaking.CONTRACTS"
                    },
                    "id": 4230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4227,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "6331:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 4228,
                        "name": "CONTRACTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4216,
                        "src": "6344:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                          "typeString": "type(enum AthertonStaking.CONTRACTS)"
                        }
                      },
                      "id": 4229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DISTRIBUTOR",
                      "nodeType": "MemberAccess",
                      "src": "6344:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      }
                    },
                    "src": "6331:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                        "typeString": "enum AthertonStaking.CONTRACTS"
                      },
                      "id": 4239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4236,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "6431:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 4237,
                          "name": "CONTRACTS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4216,
                          "src": "6444:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                            "typeString": "type(enum AthertonStaking.CONTRACTS)"
                          }
                        },
                        "id": 4238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "WARMUP",
                        "nodeType": "MemberAccess",
                        "src": "6444:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        }
                      },
                      "src": "6431:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                          "typeString": "enum AthertonStaking.CONTRACTS"
                        },
                        "id": 4258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4255,
                          "name": "_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4220,
                          "src": "6623:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                            "typeString": "enum AthertonStaking.CONTRACTS"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4256,
                            "name": "CONTRACTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4216,
                            "src": "6636:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CONTRACTS_$4216_$",
                              "typeString": "type(enum AthertonStaking.CONTRACTS)"
                            }
                          },
                          "id": 4257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "LOCKER",
                          "nodeType": "MemberAccess",
                          "src": "6636:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                            "typeString": "enum AthertonStaking.CONTRACTS"
                          }
                        },
                        "src": "6623:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 4274,
                      "nodeType": "IfStatement",
                      "src": "6618:168:14",
                      "trueBody": {
                        "id": 4273,
                        "nodeType": "Block",
                        "src": "6655:131:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 4265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4260,
                                    "name": "locker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3678,
                                    "src": "6683:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6701:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4262,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6693:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4261,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6693:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4264,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6693:10:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6683:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4c6f636b65722063616e6e6f7420626520736574206d6f7265207468616e206f6e6365",
                                  "id": 4266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6705:37:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42",
                                    "typeString": "literal_string \"Locker cannot be set more than once\""
                                  },
                                  "value": "Locker cannot be set more than once"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_1393c0ce6cf72ef68c02b3645029bac937ea9780391edccbc41f330387601d42",
                                    "typeString": "literal_string \"Locker cannot be set more than once\""
                                  }
                                ],
                                "id": 4259,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "6674:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 4267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6674:70:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4268,
                            "nodeType": "ExpressionStatement",
                            "src": "6674:70:14"
                          },
                          {
                            "expression": {
                              "id": 4271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 4269,
                                "name": "locker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3678,
                                "src": "6758:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 4270,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4222,
                                "src": "6767:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6758:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4272,
                            "nodeType": "ExpressionStatement",
                            "src": "6758:17:14"
                          }
                        ]
                      }
                    },
                    "id": 4275,
                    "nodeType": "IfStatement",
                    "src": "6426:360:14",
                    "trueBody": {
                      "id": 4254,
                      "nodeType": "Block",
                      "src": "6463:149:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4241,
                                  "name": "warmupContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3682,
                                  "src": "6491:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6518:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6509:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4242,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6509:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6509:12:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6491:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5761726d75702063616e6e6f7420626520736574206d6f7265207468616e206f6e6365",
                                "id": 4247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6523:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e",
                                  "typeString": "literal_string \"Warmup cannot be set more than once\""
                                },
                                "value": "Warmup cannot be set more than once"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2e8ccf13a80f53776b2772e3c619b3663d3f267a0ab923cc8e34231ec0e77b1e",
                                  "typeString": "literal_string \"Warmup cannot be set more than once\""
                                }
                              ],
                              "id": 4240,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "6482:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 4248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6482:80:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4249,
                          "nodeType": "ExpressionStatement",
                          "src": "6482:80:14"
                        },
                        {
                          "expression": {
                            "id": 4252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 4250,
                              "name": "warmupContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3682,
                              "src": "6576:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 4251,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4222,
                              "src": "6593:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6576:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4253,
                          "nodeType": "ExpressionStatement",
                          "src": "6576:25:14"
                        }
                      ]
                    }
                  },
                  "id": 4276,
                  "nodeType": "IfStatement",
                  "src": "6327:459:14",
                  "trueBody": {
                    "id": 4235,
                    "nodeType": "Block",
                    "src": "6368:52:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 4233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4231,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3676,
                            "src": "6387:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4232,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4222,
                            "src": "6401:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6387:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4234,
                        "nodeType": "ExpressionStatement",
                        "src": "6387:22:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4217,
              "nodeType": "StructuredDocumentation",
              "src": "6128:101:14",
              "text": "@notice sets the contract address for LP staking\n@param _contract address"
            },
            "functionSelector": "865e6fd3",
            "id": 4278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4225,
                "modifierName": {
                  "id": 4224,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6305:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6305:11:14"
              }
            ],
            "name": "setContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4278,
                  "src": "6256:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                    "typeString": "enum AthertonStaking.CONTRACTS"
                  },
                  "typeName": {
                    "id": 4219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4218,
                      "name": "CONTRACTS",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4216,
                      "src": "6256:9:14"
                    },
                    "referencedDeclaration": 4216,
                    "src": "6256:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CONTRACTS_$4216",
                      "typeString": "enum AthertonStaking.CONTRACTS"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4222,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4278,
                  "src": "6277:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6254:41:14"
            },
            "returnParameters": {
              "id": 4226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6317:0:14"
            },
            "scope": 4317,
            "src": "6234:558:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4290,
              "nodeType": "Block",
              "src": "6962:45:14",
              "statements": [
                {
                  "expression": {
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4286,
                      "name": "warmupPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3684,
                      "src": "6972:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4287,
                      "name": "_warmupPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4281,
                      "src": "6987:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6972:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "6972:28:14"
                }
              ]
            },
            "documentation": {
              "id": 4279,
              "nodeType": "StructuredDocumentation",
              "src": "6802:93:14",
              "text": " @notice set warmup period for new stakers\n @param _warmupPeriod uint"
            },
            "functionSelector": "c9f464ff",
            "id": 4291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4284,
                "modifierName": {
                  "id": 4283,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6950:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6950:11:14"
              }
            ],
            "name": "setWarmup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4281,
                  "mutability": "mutable",
                  "name": "_warmupPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4291,
                  "src": "6920:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6918:22:14"
            },
            "returnParameters": {
              "id": 4285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:0:14"
            },
            "scope": 4317,
            "src": "6900:107:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4303,
              "nodeType": "Block",
              "src": "7187:42:14",
              "statements": [
                {
                  "expression": {
                    "id": 4301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4299,
                      "name": "forfeitPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3686,
                      "src": "7197:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4300,
                      "name": "_penalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294,
                      "src": "7214:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7197:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4302,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:25:14"
                }
              ]
            },
            "documentation": {
              "id": 4292,
              "nodeType": "StructuredDocumentation",
              "src": "7013:104:14",
              "text": " @notice set warmup period for new stakers\n @param _penalty uint (10000 == 100%)"
            },
            "functionSelector": "c289b216",
            "id": 4304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4297,
                "modifierName": {
                  "id": 4296,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7175:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7175:11:14"
              }
            ],
            "name": "setForfeitPenalty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nodeType": "VariableDeclaration",
                  "scope": 4304,
                  "src": "7150:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7150:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:17:14"
            },
            "returnParameters": {
              "id": 4298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7187:0:14"
            },
            "scope": 4317,
            "src": "7122:107:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4315,
              "nodeType": "Block",
              "src": "7337:29:14",
              "statements": [
                {
                  "expression": {
                    "id": 4313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4311,
                      "name": "DAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "7347:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4312,
                      "name": "newDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4306,
                      "src": "7353:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7347:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4314,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:12:14"
                }
              ]
            },
            "functionSelector": "6637b882",
            "id": 4316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4309,
                "modifierName": {
                  "id": 4308,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7325:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7325:11:14"
              }
            ],
            "name": "setDao",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "newDao",
                  "nodeType": "VariableDeclaration",
                  "scope": 4316,
                  "src": "7300:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7300:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7299:16:14"
            },
            "returnParameters": {
              "id": 4310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7337:0:14"
            },
            "scope": 4317,
            "src": "7284:82:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4318,
        "src": "346:7022:14"
      }
    ],
    "src": "46:7322:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-04T00:51:05.899Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claim(address)": {
        "params": {
          "_recipient": "address"
        }
      },
      "contractBalance()": {
        "returns": {
          "_0": "uint"
        }
      },
      "giveLockBonus(uint256)": {
        "params": {
          "_amount": "uint"
        }
      },
      "index()": {
        "returns": {
          "_0": "uint"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "returnLockBonus(uint256)": {
        "params": {
          "_amount": "uint"
        }
      },
      "setContract(uint8,address)": {
        "params": {
          "_contract": "address"
        }
      },
      "setForfeitPenalty(uint256)": {
        "params": {
          "_penalty": "uint (10000 == 100%)"
        }
      },
      "setWarmup(uint256)": {
        "params": {
          "_warmupPeriod": "uint"
        }
      },
      "stake(uint256,address)": {
        "params": {
          "_amount": "uint"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(uint256,bool)": {
        "params": {
          "_amount": "uint",
          "_trigger": "bool"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(address)": {
        "notice": "retrieve sATHER from warmup"
      },
      "contractBalance()": {
        "notice": "returns contract ATHER holdings, including bonuses provided"
      },
      "forfeit()": {
        "notice": "forfeit sATHER in warmup and retrieve ATHER"
      },
      "giveLockBonus(uint256)": {
        "notice": "provide bonus to locked staking contract"
      },
      "index()": {
        "notice": "returns the sATHER index, which tracks rebase growth"
      },
      "rebase()": {
        "notice": "trigger rebase if epoch over"
      },
      "returnLockBonus(uint256)": {
        "notice": "reclaim bonus from locked staking contract"
      },
      "setContract(uint8,address)": {
        "notice": "sets the contract address for LP staking"
      },
      "setForfeitPenalty(uint256)": {
        "notice": "set warmup period for new stakers"
      },
      "setWarmup(uint256)": {
        "notice": "set warmup period for new stakers"
      },
      "stake(uint256,address)": {
        "notice": "stake ATHER to enter warmup"
      },
      "toggleDepositLock()": {
        "notice": "prevent new deposits to address (protection from malicious activity)"
      },
      "unstake(uint256,bool)": {
        "notice": "redeem sATHER for ATHER"
      }
    },
    "version": 1
  }
}